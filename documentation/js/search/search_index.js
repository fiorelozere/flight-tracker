var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.267,1,0.852]],["body/components/AppComponent.html",[0,0.452,1,1.518,2,1.421,3,0.422,4,0.422,5,1.208,6,1.208,7,0.371,8,3.21,9,1.112,10,1.871,11,2.025,12,2.582,13,1.421,14,1.201,15,1.543,16,4.519,17,1.543,18,0.757,19,0.032,20,0.94,21,0.655,22,1.843,23,0.422,24,0.72,25,1.208,26,1.543,27,1.543,28,0.862,29,1.792,30,1.208,31,1.111,32,1.208,33,1.023,34,1.023,35,1.208,36,1.023,37,1.307,38,1.208,39,1.023,40,1.208,41,1.023,42,1.208,43,1.023,44,1.112,45,1.208,46,1.023,47,0.879,48,1.208,49,1.023,50,1.208,51,1.023,52,1.208,53,1.023,54,1.208,55,1.023,56,1.208,57,1.023,58,1.208,59,1.112,60,0.94,61,0.789,62,1.208,63,0.024,64,0.024]],["title/interfaces/AuthPayload.html",[65,1.092,66,1.684]],["body/interfaces/AuthPayload.html",[3,0.52,4,0.52,7,0.456,19,0.031,23,0.52,63,0.028,64,0.028,65,1.614,66,2.933,67,2.487,68,3.949,69,3.949,70,0.336,71,0.538,72,3.951,73,3.553,74,3.038,75,0.95]],["title/injectables/AuthService.html",[76,1.092,77,2.065]],["body/injectables/AuthService.html",[3,0.424,4,0.424,7,0.372,12,2.029,18,0.909,19,0.033,20,0.944,21,0.657,23,0.424,24,0.723,31,0.792,63,0.024,64,0.024,66,3.102,70,0.274,71,0.475,72,3.175,73,2.855,75,0.657,76,1.68,77,3.175,78,2.029,79,3.223,80,3.937,81,1.547,82,3.496,83,4.925,84,1.011,85,3.861,86,3.575,87,2.855,88,2.855,89,3.575,90,1.555,91,1.555,92,2.029,93,4.284,94,4.769,95,3.312,96,1.31,97,3.172,98,3.575,99,0.723,100,0.657,101,3.575,102,3.861,103,2.803,104,2.803,105,1.694,106,2.238,107,2.803,108,2.803,109,2.803,110,2.238,111,1.851,112,1.851,113,2.803,114,3.861,115,1.317,116,3.223]],["title/injectables/AuthStore.html",[76,1.092,117,1.406]],["body/injectables/AuthStore.html",[3,0.225,4,0.225,7,0.198,12,1.079,14,0.939,18,0.865,19,0.033,20,0.502,21,0.349,22,0.984,23,0.225,24,0.384,31,0.788,44,0.912,63,0.016,64,0.016,66,1.657,70,0.146,71,0.304,72,2.032,73,1.827,74,2.528,75,0.537,76,1.075,77,1.323,78,1.079,81,0.99,82,2.777,84,1.185,86,3.127,87,2.497,88,1.827,89,3.127,90,1.547,91,1.27,92,2.018,93,3.127,94,4.097,95,1.827,96,1.306,97,1.657,98,4.559,99,0.988,100,0.898,105,0.9,108,1.489,109,1.489,110,1.189,111,1.84,112,1.84,115,1.883,117,1.383,118,1.713,119,2.787,120,3.839,121,3.596,122,2.787,123,3.294,124,3.839,125,3.839,126,3.153,127,4.308,128,3.596,129,3.153,130,2.018,131,2.052,132,3.153,133,2.052,134,3.153,135,3.88,136,3.205,137,2.533,138,3.153,139,2.032,140,3.153,141,3.153,142,2.052,143,3.153,144,2.288,145,3.153,146,3.839,147,3.839,148,3.153,149,1.422,150,2.052,151,3.153,152,3.153,153,3.153,154,1.511,155,3.153,156,2.052,157,3.153,158,3.153,159,2.052,160,3.88,161,4.308,162,2.052,163,2.475,164,2.225,165,3.153,166,3.153,167,3.153,168,3.153,169,3.839,170,2.288,171,2.632,172,3.153,173,3.153,174,3.153,175,4.308,176,3.596,177,3.596,178,3.153,179,2.018,180,3.153,181,3.205,182,2.632,183,2.052,184,2.632,185,2.052,186,2.288,187,2.052,188,2.032,189,2.052,190,3.153,191,2.052,192,3.153,193,3.153,194,2.052,195,1.079,196,2.052,197,2.052,198,2.052,199,2.052,200,1.323,201,1.383,202,1.323,203,2.052,204,1.713,205,1.323,206,1.489,207,1.323,208,2.052,209,1.713,210,1.713,211,1.713,212,2.052,213,3.153,214,2.052,215,3.153,216,2.052,217,2.052,218,2.052,219,1.489,220,2.052,221,2.052,222,2.052,223,2.052,224,2.052,225,2.052,226,2.052]],["title/components/CreateTicketComponent.html",[0,0.267,33,0.852]],["body/components/CreateTicketComponent.html",[0,0.276,1,0.435,2,0.762,3,0.179,4,0.179,5,0.513,6,0.513,7,0.157,9,0.472,10,1.624,11,1.742,13,0.762,14,0.644,15,0.827,17,0.827,18,0.883,19,0.033,20,0.399,21,0.278,22,0.783,23,0.179,24,0.62,25,0.513,26,0.827,27,0.827,28,0.366,29,1.193,30,0.513,31,0.679,32,0.513,33,1.01,34,1.185,35,0.513,36,0.435,37,0.701,38,0.513,39,0.435,40,0.513,41,0.435,42,0.513,43,0.435,44,0.472,45,0.513,46,0.435,47,0.921,48,0.513,49,0.435,50,0.513,51,0.435,52,0.513,53,0.435,54,0.513,55,0.435,56,0.513,57,0.435,58,0.513,59,0.472,60,0.928,61,0.335,62,0.513,63,0.013,64,0.013,70,0.27,71,0.254,75,0.916,81,0.827,84,1,96,0.435,99,0.877,100,0.797,105,0.717,115,1.129,122,2.403,137,1.156,149,0.605,163,1.053,164,0.947,181,2.763,186,1.912,195,1.74,200,1.053,201,0.717,202,1.053,205,1.053,206,1.186,207,1.053,227,4.2,228,1.364,229,1.061,230,1.061,231,1.74,232,2.134,233,1.74,234,1.74,235,2.403,236,2.403,237,2.403,238,3.31,239,3.31,240,3.31,241,2.763,242,2.763,243,2.403,244,2.403,245,2.403,246,2.403,247,3.31,248,3.31,249,2.139,250,2.634,251,4.453,252,3.426,253,2.139,254,2.634,255,4.453,256,2.134,257,2.634,258,2.318,259,2.634,260,2.634,261,3.31,262,2.415,263,4.199,264,2.634,265,2.634,266,2.634,267,3.31,268,3.717,269,2.134,270,2.634,271,2.763,272,2.403,273,2.685,274,1.74,275,1.453,276,3.798,277,1.634,278,2.634,279,2.87,280,2.634,281,1.912,282,2.134,283,1.912,284,2.634,285,2.634,286,2.634,287,2.199,288,2.757,289,2.634,290,1.912,291,2.634,292,3.17,293,2.199,294,2.199,295,2.634,296,2.634,297,1.912,298,1.912,299,2.634,300,1.634,301,2.199,302,2.199,303,1.74,304,1.912,305,1.634,306,1.912,307,4.63,308,1.912,309,2.634,310,1.453,311,1.453,312,1.912,313,2.763,314,2.403,315,1.634,316,1.912,317,1.634,318,1.634,319,1.912,320,1.634,321,2.634,322,2.634,323,2.634,324,1.634,325,0.658,326,0.783,327,1.364,328,0.859,329,1.186,330,1.053,331,1.186,332,1.186,333,1.186,334,1.634,335,1.364,336,1.364,337,1.186,338,0.947,339,1.634,340,1.053,341,1.634,342,0.859,343,1.634,344,1.634,345,1.634,346,1.634,347,1.364,348,1.634,349,1.634,350,1.634,351,1.634,352,1.634,353,1.634,354,1.634,355,1.634,356,1.634,357,1.634,358,1.634,359,1.634,360,1.634]],["title/components/DashboardChart.html",[0,0.267,36,0.852]],["body/components/DashboardChart.html",[0,0.299,1,0.49,2,0.838,3,0.202,4,0.202,5,0.579,6,0.579,7,0.178,9,0.533,10,1.667,11,1.791,13,0.838,14,1.081,15,0.911,17,0.911,18,0.825,19,0.033,20,0.45,21,0.314,23,0.202,24,0.345,25,1.126,26,0.911,27,0.911,28,0.413,29,1.277,30,0.579,31,0.736,32,0.579,33,0.49,34,0.49,35,0.579,36,1.082,37,1.307,38,0.579,39,0.49,40,0.579,41,0.49,42,0.579,43,0.49,44,0.533,45,0.579,46,0.49,47,0.626,48,0.579,49,0.49,50,0.579,51,0.49,52,0.579,53,0.49,54,0.579,55,0.49,56,0.579,57,0.49,58,0.579,59,0.533,60,0.45,61,0.378,62,0.579,63,0.014,64,0.014,70,0.131,71,0.279,75,0.891,81,0.911,84,1.183,95,1.681,96,0.954,97,2.468,99,1.023,100,0.912,105,0.809,112,1.718,115,1.675,130,1.884,149,0.683,163,1.188,164,1.068,179,2.752,188,1.869,195,1.884,200,1.188,201,1.573,202,1.188,204,1.538,207,2.311,219,2.105,231,1.884,233,1.884,234,1.884,252,1.068,258,0.809,274,2.468,281,2.105,282,1.188,283,2.105,288,2.951,297,2.105,298,2.105,316,2.105,326,0.883,328,0.968,337,2.602,361,4.859,362,1.538,363,2.105,364,1.573,365,3.752,366,3.585,367,2.311,368,2.311,369,2.992,370,5.089,371,3.585,372,3.585,373,3.585,374,2.201,375,4.421,376,2.602,377,4.065,378,2.951,379,1.869,380,1.842,381,2.899,382,1.842,383,2.42,384,2.62,385,1.842,386,2.899,387,1.869,388,2.899,389,2.899,390,2.42,391,2.899,392,2.899,393,2.899,394,2.899,395,2.899,396,2.105,397,2.899,398,2.105,399,1.842,400,1.842,401,2.899,402,1.842,403,2.899,404,1.842,405,4.421,406,4.421,407,1.842,408,1.842,409,2.899,410,1.842,411,1.884,412,1.842,413,2.42,414,2.899,415,2.42,416,2.42,417,2.42,418,3.69,419,2.42,420,2.42,421,2.42,422,2.42,423,1.842,424,2.105,425,1.842,426,1.538,427,1.538,428,1.337,429,1.188,430,1.842,431,1.842,432,1.337,433,1.337,434,1.538,435,1.538,436,1.538,437,1.068,438,1.842,439,1.842,440,1.842,441,1.842,442,1.842,443,1.538,444,1.842,445,1.842,446,2.899,447,1.842,448,1.842,449,1.842,450,2.899,451,2.899,452,2.899,453,2.899,454,2.899,455,1.842,456,1.842,457,1.337,458,1.842]],["title/components/DashboardComponent.html",[0,0.267,39,0.852]],["body/components/DashboardComponent.html",[0,0.431,1,0.93,2,1.336,3,0.384,4,0.384,5,1.098,6,1.098,7,0.337,9,1.011,10,1.85,11,2.001,13,1.336,14,1.129,15,1.451,17,1.451,18,0.847,19,0.032,21,0.595,23,0.384,24,0.655,25,1.098,26,1.451,27,1.451,28,0.784,29,1.728,30,1.098,31,1.061,32,1.098,33,0.93,34,0.93,35,1.098,36,1.464,37,1.594,38,1.098,39,1.464,40,1.098,41,0.93,42,1.098,43,0.93,44,1.011,45,1.098,46,0.93,47,0.847,48,1.098,49,1.464,50,1.098,51,0.93,52,1.098,53,0.93,54,1.098,55,0.93,56,1.098,57,0.93,58,1.098,59,1.011,60,0.855,61,0.718,62,1.098,63,0.023,64,0.023,70,0.248,71,0.445,84,0.718,99,0.655,100,0.595,201,1.535,229,1.861,230,1.861,325,1.409,365,2.254,426,2.919,433,4.265,434,2.919,435,2.919,459,2.919,460,5.172,461,5.172,462,3.497,463,3.497,464,3.497,465,3.497,466,2.919,467,3.497]],["title/components/DashboardLayoutComponent.html",[0,0.267,41,0.852]],["body/components/DashboardLayoutComponent.html",[0,0.39,1,0.766,2,1.169,3,0.316,4,0.316,5,0.904,6,0.904,7,0.277,9,0.832,10,1.803,11,1.946,13,1.169,14,0.989,15,1.27,16,3.903,17,1.27,18,0.922,19,0.033,20,0.703,21,0.49,22,1.379,23,0.316,24,0.539,25,0.904,26,1.27,27,1.825,28,0.645,29,1.593,30,0.904,31,0.959,32,0.904,33,0.766,34,0.766,35,0.904,36,0.766,37,1.349,38,0.904,39,0.766,40,0.904,41,1.349,42,0.904,43,0.766,44,0.832,45,0.904,46,0.766,47,0.781,48,0.904,49,0.766,50,0.904,51,0.766,52,0.904,53,0.766,54,0.904,55,0.766,56,0.904,57,1.349,58,0.904,59,0.832,60,0.703,61,0.59,62,0.904,63,0.02,64,0.02,70,0.204,71,0.39,84,0.59,99,0.539,100,0.49,229,1.629,230,1.629,232,3.014,256,3.572,325,1.159,326,1.379,364,1.263,468,3.375,469,2.402,470,4.46,471,3.903,472,3.394,473,3.394,474,4.675,475,4.675,476,4.675,477,4.675,478,4.675,479,4.675,480,4.675,481,4.675,482,4.675,483,4.675,484,5.541,485,4.675,486,4.675,487,4.675,488,4.675,489,4.675,490,3.375,491,2.877,492,2.402,493,2.089,494,2.877,495,2.877,496,1.668,497,2.402,498,2.877,499,2.877]],["title/injectables/DashboardService.html",[76,1.092,429,2.065]],["body/injectables/DashboardService.html",[3,0.399,4,0.399,7,0.35,12,1.911,18,0.86,19,0.033,20,0.889,21,0.619,23,0.399,24,0.681,47,0.971,63,0.023,64,0.023,70,0.258,71,0.457,75,0.986,76,1.616,78,1.911,80,3.826,81,1.488,84,1.082,95,3.237,96,1.486,97,3.312,99,0.681,100,0.619,101,3.439,103,2.639,104,2.639,105,1.595,106,2.107,107,2.639,110,2.107,112,2.271,113,3.439,115,1.616,258,2.542,374,2.25,429,3.054,457,4.204,500,3.035,501,5.585,502,5.585,503,3.636,504,4.662,505,4.662,506,3.636,507,4.204,508,4.835,509,3.636,510,3.636,511,3.955,512,3.636]],["title/injectables/LayoutService.html",[76,1.092,496,1.857]],["body/injectables/LayoutService.html",[3,0.359,4,0.359,7,0.315,12,1.717,18,0.68,19,0.033,20,0.799,21,0.556,23,0.359,24,0.612,31,0.67,37,1.424,63,0.022,64,0.022,70,0.232,71,0.425,75,0.556,76,1.505,78,1.717,81,1.386,84,1.229,90,1.316,91,1.316,96,1.174,99,1.047,100,0.981,110,1.894,130,2.627,149,1.635,160,4.172,195,2.627,275,1.937,496,2.558,507,3.204,513,2.727,514,5.353,515,4.998,516,4.998,517,4.998,518,4.998,519,4.413,520,5.353,521,3.267,522,4.413,523,3.628,524,3.267,525,3.267,526,4.413,527,3.267,528,4.413,529,3.267,530,4.809,531,2.558,532,2.845,533,4.413,534,5.353,535,4.413,536,5.353,537,4.413,538,4.413,539,3.267,540,4.413,541,4.413,542,4.413,543,3.267,544,3.684,545,3.267,546,4.413,547,3.267,548,3.267,549,3.267,550,3.267,551,3.267,552,2.371,553,3.267,554,3.267,555,3.267,556,3.267,557,3.267,558,3.267,559,3.267,560,3.267,561,3.267]],["title/directives/RoleDirective.html",[28,0.718,60,0.783]],["body/directives/RoleDirective.html",[3,0.439,4,0.439,7,0.385,9,1.156,10,1.456,13,1.456,14,1.347,18,0.891,19,0.033,20,0.977,21,0.68,23,0.439,24,0.748,28,1.129,59,1.156,60,1.231,61,1.283,63,0.025,64,0.025,70,0.284,71,0.485,84,1.224,99,0.943,100,0.857,117,1.754,130,2.897,201,2.209,252,2.317,342,2.101,379,3.245,411,2.101,437,2.317,562,3.336,563,5.035,564,5.512,565,4.001,566,5.512,567,5.035,568,5.035,569,3.245,570,3.997,571,5.035,572,3.997,573,3.336,574,3.997,575,3.997,576,3.997]],["title/components/SignInComponent.html",[0,0.267,43,0.852]],["body/components/SignInComponent.html",[0,0.34,1,0.602,2,0.981,3,0.248,4,0.248,5,0.71,6,0.71,7,0.218,9,0.654,10,1.734,11,1.868,13,0.981,14,0.83,15,1.066,17,1.066,18,0.856,19,0.033,20,0.553,21,0.385,23,0.248,24,0.423,25,0.71,26,1.066,27,1.066,28,0.507,29,1.422,30,0.71,31,0.929,32,0.71,33,0.602,34,0.602,35,0.71,36,0.602,37,0.903,38,0.71,39,0.602,40,0.71,41,0.602,42,0.71,43,1.205,44,1.608,45,0.71,46,0.602,47,0.697,48,0.71,49,0.602,50,0.71,51,0.602,52,0.71,53,0.602,54,0.71,55,0.602,56,0.71,57,0.602,58,0.71,59,0.654,60,0.553,61,0.464,62,0.71,63,0.017,64,0.017,66,1.784,70,0.16,71,0.327,72,3.504,73,2.954,75,0.385,81,1.066,82,2.918,84,1.084,86,2.463,87,1.967,88,1.967,89,3.522,90,0.911,91,0.911,92,1.188,93,1.641,96,0.903,99,0.908,100,0.826,108,1.641,109,1.641,111,1.084,112,1.084,115,0.771,117,0.992,149,1.257,188,2.187,195,1.188,229,1.367,230,1.367,231,2.141,233,2.141,234,2.141,235,2.957,236,2.957,237,2.957,243,2.957,244,2.957,245,2.957,272,2.957,273,2.626,304,2.463,306,2.463,307,3.779,313,1.887,325,0.911,326,1.084,328,1.188,329,1.641,330,1.457,331,1.641,332,1.641,333,1.641,347,1.887,367,2.626,368,2.626,411,1.784,472,2.957,473,2.957,493,1.641,531,2.361,532,2.626,544,2.833,565,2.957,569,2.187,577,4.538,578,4.538,579,1.887,580,3.401,581,4.074,582,4.727,583,4.074,584,5.095,585,4.074,586,5.285,587,5.56,588,3.394,589,3.394,590,4.528,591,2.261,592,3.394,593,3.287,594,3.394,595,3.394,596,3.394,597,3.394,598,2.261,599,2.261,600,2.261,601,2.261,602,2.261,603,2.261,604,1.887,605,2.261,606,2.261,607,2.261,608,2.261,609,2.261]],["title/interfaces/Ticket.html",[47,0.493,65,1.092]],["body/interfaces/Ticket.html",[3,0.449,4,0.449,7,0.394,19,0.032,23,0.449,47,0.787,63,0.025,64,0.025,65,1.395,67,2.15,70,0.29,71,0.492,74,3.16,75,1.078,91,2.058,249,2.56,253,2.56,258,2.56,269,2.935,308,4.235,310,2.56,311,2.56,312,4.235,610,3.414,611,3.76,612,4.87]],["title/components/TicketCardComponent.html",[0,0.267,46,0.852]],["body/components/TicketCardComponent.html",[0,0.318,1,0.54,2,0.904,3,0.223,4,0.223,5,0.638,6,0.638,7,0.196,9,0.587,10,1.7,11,1.829,13,0.904,14,0.932,15,0.982,17,0.982,18,0.66,19,0.033,21,0.346,23,0.223,24,0.38,25,0.638,26,0.982,27,0.982,28,0.455,29,1.345,30,0.638,31,0.783,32,0.638,33,0.54,34,0.54,35,0.638,36,0.54,37,0.832,38,0.638,39,0.54,40,0.638,41,0.54,42,0.638,43,0.54,44,0.587,45,0.638,46,1.14,47,0.942,48,0.638,49,0.54,50,0.638,51,0.54,52,0.638,53,0.54,54,0.638,55,0.54,56,0.638,57,0.54,58,0.638,59,0.587,60,0.496,61,0.417,62,0.638,63,0.015,64,0.015,70,0.144,71,0.301,84,0.642,115,1.301,229,1.26,230,1.26,233,2.005,234,2.005,252,1.177,258,1.674,262,3.296,268,3.183,325,0.818,328,1.067,338,1.177,342,1.067,364,0.891,367,2.458,368,2.458,374,1.536,379,2.016,398,2.768,411,1.067,437,1.177,530,3.183,531,2.211,552,3.547,580,3.183,611,2.458,613,3.183,614,2.458,615,1.695,616,6.085,617,3.814,618,3.814,619,4.887,620,5.687,621,5.393,622,5.687,623,5.393,624,5.393,625,5.393,626,3.814,627,4.887,628,3.814,629,3.814,630,3.814,631,3.814,632,3.814,633,3.814,634,5.879,635,3.814,636,4.887,637,5.879,638,4.887,639,4.887,640,3.814,641,5.393,642,3.814,643,3.814,644,3.814,645,3.814,646,3.814,647,3.814,648,3.814,649,3.814,650,3.814,651,3.814,652,3.814,653,3.814,654,3.814,655,3.814,656,3.814,657,3.814,658,3.814,659,3.814,660,3.814,661,3.814,662,3.814,663,3.814,664,3.127]],["title/components/TicketDealsComponent.html",[0,0.267,49,0.852]],["body/components/TicketDealsComponent.html",[0,0.368,1,0.689,2,1.084,3,0.284,4,0.284,5,0.813,6,0.813,7,0.249,9,0.748,10,1.774,11,1.913,13,1.084,14,0.917,15,1.178,17,1.178,18,0.87,19,0.033,20,0.633,21,0.44,23,0.284,24,0.485,25,0.813,26,1.178,27,1.178,28,0.58,29,1.518,30,0.813,31,0.905,32,0.813,33,0.689,34,0.689,35,0.813,36,0.689,37,0.997,38,0.813,39,0.689,40,0.813,41,0.689,42,0.813,43,0.689,44,0.748,45,0.813,46,1.286,47,0.922,48,0.813,49,1.286,50,0.813,51,0.689,52,0.813,53,0.689,54,0.813,55,0.689,56,0.813,57,0.689,58,0.813,59,0.748,60,0.633,61,0.531,62,0.813,63,0.019,64,0.019,70,0.184,71,0.361,81,1.178,84,1.098,96,0.689,99,0.961,100,0.873,105,1.136,115,1.648,149,0.959,163,1.668,164,1.5,179,2.317,188,2.417,195,2.317,200,1.668,201,1.136,202,1.668,219,2.722,233,2.317,234,2.317,256,2.842,274,2.317,275,2.347,281,2.722,282,1.668,283,2.722,288,3.509,297,2.722,298,2.722,303,1.36,316,2.722,319,2.722,328,1.36,336,2.16,337,3.2,338,1.5,363,2.722,364,1.935,367,2.842,368,2.842,374,2.155,376,3.2,378,3.509,387,2.842,413,3.13,415,3.13,416,3.13,417,3.13,418,2.16,419,3.13,420,3.13,421,3.13,422,3.13,424,2.722,432,1.879,443,2.16,665,4.606,666,2.16,667,4.005,668,3.68,669,3.68,670,2.588,671,2.588,672,2.588,673,3.749,674,2.588,675,2.588,676,2.588,677,2.588,678,2.16]],["title/components/TicketFiltersComponent.html",[0,0.267,51,0.852]],["body/components/TicketFiltersComponent.html",[0,0.331,1,0.576,2,0.95,3,0.238,4,0.238,5,0.68,6,0.68,7,0.209,9,0.626,10,1.721,11,1.852,13,0.95,14,0.803,15,1.031,17,1.031,18,0.846,19,0.033,20,0.529,21,0.368,23,0.238,24,0.405,25,0.68,26,1.031,27,1.031,28,0.485,29,1.391,30,0.68,31,0.909,32,0.68,33,0.576,34,0.576,35,0.68,36,0.576,37,0.874,38,0.68,39,0.576,40,0.68,41,0.576,42,0.68,43,0.576,44,0.626,45,0.68,46,0.576,47,0.772,48,0.68,49,0.576,50,0.68,51,1.178,52,0.68,53,0.576,54,0.68,55,0.576,56,0.68,57,0.576,58,0.68,59,0.626,60,0.529,61,0.444,62,0.68,63,0.016,64,0.016,70,0.154,71,0.316,74,2.571,75,0.368,81,1.031,84,1.101,90,0.872,91,0.872,92,1.138,96,1.178,99,0.829,100,0.754,111,1.038,115,1.12,130,2.086,137,2.458,139,2.855,149,1.217,201,1.441,229,1.323,230,1.323,231,2.086,235,2.88,236,2.88,237,2.88,241,3.312,242,3.312,243,2.88,244,2.88,245,2.88,246,2.88,249,2.089,253,2.089,258,2.199,263,4.459,272,2.88,273,3.356,279,1.395,287,1.807,304,2.384,306,2.384,310,1.741,311,1.741,325,0.872,326,1.038,329,1.571,330,1.395,331,1.571,332,1.571,333,1.571,335,1.807,340,2.558,342,1.138,364,0.95,411,2.086,437,1.904,582,3.312,593,3.215,614,3.541,679,1.807,680,3.284,681,3.968,682,3.968,683,3.968,684,3.968,685,3.968,686,3.284,687,5.364,688,3.312,689,3.284,690,3.968,691,3.968,692,4.675,693,2.086,694,4.429,695,3.697,696,3.284,697,2.165,698,2.165,699,3.284,700,4.429,701,3.284,702,3.697,703,2.165,704,2.384,705,3.284,706,3.697,707,2.165,708,3.284,709,3.284,710,3.284,711,3.284,712,2.165,713,1.904,714,1.904,715,2.165,716,2.165,717,3.312,718,2.165,719,2.165,720,2.165,721,1.038,722,1.571,723,1.571,724,1.571,725,2.165,726,2.165,727,2.165,728,2.165,729,2.165,730,1.807,731,2.165,732,2.165,733,3.284,734,2.384,735,2.165,736,2.165]],["title/components/TicketListComponent.html",[0,0.267,53,0.852]],["body/components/TicketListComponent.html",[0,0.38,1,0.73,2,1.13,3,0.301,4,0.301,5,0.861,6,0.861,7,0.264,9,0.793,10,1.79,11,1.932,13,1.13,14,1.283,15,1.228,17,1.228,18,0.765,19,0.033,21,0.467,23,0.301,24,0.513,25,0.861,26,1.228,27,1.228,28,0.615,29,1.559,30,0.861,31,0.935,32,0.861,33,0.73,34,0.73,35,0.861,36,0.73,37,1.04,38,0.861,39,0.73,40,0.861,41,0.73,42,0.861,43,0.73,44,0.793,45,0.861,46,1.321,47,0.923,48,0.861,49,0.73,50,0.861,51,0.73,52,0.861,53,1.321,54,0.861,55,0.73,56,0.861,57,0.73,58,0.861,59,0.793,60,0.67,61,0.563,62,0.861,63,0.019,64,0.019,70,0.352,71,0.377,84,1.198,99,0.513,100,0.467,154,2.873,229,1.575,230,1.575,252,2.64,256,2.936,269,2.615,275,2.63,325,1.105,338,1.59,364,1.203,374,2.198,379,2.519,387,2.936,398,2.837,411,1.441,437,3.042,552,3.306,613,3.802,614,3.818,668,3.802,669,3.802,678,2.289,704,3.96,717,3.263,737,2.289,738,4.144,739,4.554,740,5.247,741,3.042,742,3.864,743,3.909,744,3.909,745,3.909,746,3.909,747,3.909,748,2.742,749,2.289,750,2.289]],["title/interfaces/TicketListParams.html",[65,1.092,721,1.535]],["body/interfaces/TicketListParams.html",[3,0.406,4,0.406,7,0.356,18,0.57,19,0.033,23,0.526,47,0.738,63,0.024,64,0.024,65,1.634,67,1.944,70,0.262,71,0.462,74,3.062,75,1.048,137,2.858,154,2.695,179,1.944,249,2.467,253,2.467,269,3.062,274,1.944,310,2.467,311,2.467,374,1.49,523,3.478,693,1.944,713,3.259,714,3.259,721,2.547,741,3.259,742,2.384,751,2.685,752,2.685,753,3.087,754,2.144,755,2.685]],["title/interfaces/TicketListState.html",[65,1.092,754,1.857]],["body/interfaces/TicketListState.html",[3,0.434,4,0.434,7,0.381,18,0.609,19,0.033,23,0.549,47,0.888,63,0.025,64,0.025,65,1.706,67,2.079,70,0.281,71,0.482,74,2.956,75,1.034,137,2.763,154,1.896,179,3.03,249,1.736,253,1.736,269,2.956,274,3.03,310,1.736,311,1.736,374,2.322,523,4.408,693,3.03,713,2.293,714,2.293,721,2.763,741,2.293,742,3.715,751,2.872,752,2.872,753,3.302,754,2.899,755,4.184]],["title/components/TicketsComponent.html",[0,0.267,55,0.852]],["body/components/TicketsComponent.html",[0,0.343,1,0.61,2,0.992,3,0.252,4,0.252,5,0.72,6,0.72,7,0.221,9,0.663,10,1.739,11,1.873,13,0.992,14,0.838,15,1.077,17,1.077,18,0.933,19,0.033,20,0.561,21,0.39,22,1.099,23,0.252,24,0.429,25,0.72,26,1.077,27,1.077,28,0.514,29,1.432,30,0.72,31,1.002,32,0.72,33,0.61,34,1.213,35,0.72,36,0.61,37,0.912,38,0.72,39,0.61,40,0.72,41,0.61,42,0.72,43,0.61,44,0.663,45,0.72,46,0.61,47,0.818,48,0.72,49,0.61,50,0.72,51,1.213,52,0.72,53,1.213,54,0.72,55,1.213,56,0.72,57,0.61,58,0.72,59,0.663,60,1.115,61,1.09,62,0.72,63,0.017,64,0.017,70,0.163,71,0.33,75,0.584,81,1.077,84,1.145,90,1.837,91,1.382,92,1.803,96,1.093,99,0.914,100,0.831,111,1.644,121,3.806,122,2.982,130,2.159,144,2.982,149,1.522,154,1.099,176,1.914,177,1.914,184,2.863,186,2.49,201,1.505,205,1.478,206,1.665,207,2.211,209,1.914,210,1.914,211,1.914,229,1.382,230,1.382,231,2.159,232,2.648,233,2.159,234,2.159,246,2.982,249,1.505,253,1.505,262,1.329,275,2.142,292,1.914,310,1.505,311,1.505,325,0.924,326,1.099,327,1.914,328,1.205,342,1.205,363,2.49,364,1.803,369,3.43,378,3.31,396,1.665,436,1.914,466,2.863,573,1.914,593,3.963,692,3.806,693,1.205,695,2.863,713,1.988,714,1.988,721,1.099,722,1.665,723,1.665,724,2.49,734,3.31,741,1.988,749,4.075,750,1.914,756,1.914,757,2.982,758,4.108,759,4.881,760,3.43,761,3.43,762,2.293,763,3.43,764,2.293,765,4.56,766,4.56,767,4.56,768,3.43,769,2.293,770,4.108,771,2.293,772,2.293,773,2.293,774,3.43,775,2.293,776,2.293,777,2.293,778,2.293,779,2.293,780,2.293,781,1.914,782,2.293,783,2.293,784,2.293,785,2.293,786,2.293,787,2.293,788,2.293,789,2.293,790,2.293,791,2.293,792,2.293,793,2.293,794,2.293,795,3.43,796,2.293,797,3.43,798,1.914,799,1.914,800,3.43,801,3.43,802,3.43,803,2.293,804,2.293,805,2.293,806,2.293,807,2.293,808,2.293,809,2.293,810,2.293]],["title/injectables/TicketsService.html",[76,1.092,303,1.684]],["body/injectables/TicketsService.html",[3,0.288,4,0.288,7,0.252,12,1.377,18,0.827,19,0.033,20,0.64,21,0.446,23,0.288,24,0.49,31,0.911,34,1.006,47,0.962,63,0.019,64,0.019,70,0.186,71,0.364,75,0.756,76,1.29,78,1.377,80,3.222,81,1.188,84,1.058,88,2.192,90,2.327,91,1.788,92,2.333,95,3.114,96,1.508,97,3.25,99,0.49,100,0.446,101,2.746,103,1.902,104,1.902,105,1.15,106,1.519,107,1.902,110,1.519,111,2.128,112,2.128,113,3.222,115,1.658,116,2.187,137,1.66,139,2.438,170,1.902,258,1.15,271,3.157,275,2.357,279,3.462,290,2.746,301,3.157,303,1.988,338,1.519,383,4.058,384,2.438,511,3.157,667,3.529,693,2.823,706,3.157,721,2.847,722,1.902,723,1.902,738,4.058,799,2.187,811,2.187,812,4.439,813,3.782,814,4.861,815,3.782,816,3.782,817,2.62,818,3.782,819,2.62,820,3.782,821,6.247,822,3.782,823,3.782,824,2.62,825,3.782,826,2.62,827,3.782,828,2.62,829,2.62,830,4.439,831,2.62,832,2.62,833,2.62,834,2.62,835,2.62,836,2.62,837,2.62,838,2.62,839,2.62,840,2.62,841,2.62,842,2.62,843,3.782,844,2.62,845,3.782,846,2.62,847,3.782,848,2.62,849,2.62,850,3.782,851,2.62,852,2.62,853,2.62,854,2.62,855,2.62,856,2.62,857,2.62]],["title/interfaces/TokenDecoded.html",[65,1.092,123,2.065]],["body/interfaces/TokenDecoded.html",[3,0.487,4,0.487,7,0.428,19,0.032,23,0.487,61,1.232,63,0.027,64,0.027,65,1.513,67,2.333,70,0.315,71,0.517,73,3.479,74,3.077,75,1.046,123,3.462,269,2.994,611,3.868,858,3.704,859,3.704,860,6.001,861,6.001]],["title/components/ToolbarComponent.html",[0,0.267,57,0.852]],["body/components/ToolbarComponent.html",[0,0.407,1,0.831,2,1.238,3,0.343,4,0.343,5,0.981,6,0.981,7,0.301,9,0.903,10,1.823,11,1.97,13,1.238,14,1.047,15,1.345,17,1.345,18,0.913,19,0.033,20,0.764,21,0.532,22,1.497,23,0.343,24,0.585,25,0.981,26,1.345,27,1.345,28,0.701,29,1.65,30,0.981,31,1.002,32,0.981,33,0.831,34,0.831,35,0.981,36,0.831,37,1.139,38,0.981,39,0.831,40,0.981,41,0.831,42,0.981,43,0.831,44,0.903,45,0.981,46,0.831,47,0.809,48,0.981,49,0.831,50,0.981,51,0.831,52,0.981,53,0.831,54,0.981,55,0.831,56,0.981,57,1.398,58,1.534,59,0.903,60,0.764,61,0.641,62,0.981,63,0.021,64,0.021,70,0.222,71,0.413,81,1.345,84,1.002,96,0.831,99,0.802,100,0.729,117,1.371,128,4.86,149,1.157,229,1.725,230,1.725,231,2.567,232,3.148,325,1.258,326,1.497,364,1.371,470,4.077,471,4.077,472,3.545,473,3.545,490,3.574,492,2.608,493,2.268,496,1.811,497,2.608,531,2.831,532,3.148,565,3.545,569,2.76,604,2.608,862,2.608,863,4.884,864,4.884,865,4.884,866,4.884,867,4.884,868,4.884,869,4.884,870,3.124,871,3.124,872,3.124,873,3.124,874,3.124]],["title/coverage.html",[875,3.635]],["body/coverage.html",[0,0.519,1,0.859,7,0.311,8,2.695,19,0.033,28,0.724,33,0.859,36,0.859,39,0.859,41,0.859,43,0.859,46,0.859,47,0.497,49,0.859,51,0.859,53,0.859,55,0.859,57,0.859,60,0.789,63,0.022,64,0.022,65,1.899,66,1.697,68,2.695,69,2.695,75,0.549,76,1.899,77,2.081,79,2.695,106,1.871,117,1.417,118,2.695,123,2.081,227,2.695,228,2.695,262,3.745,279,2.081,303,1.697,314,2.343,340,2.081,361,2.695,362,2.695,429,2.081,459,2.695,468,2.695,469,2.695,496,1.871,500,2.695,513,2.695,562,2.695,577,2.695,578,2.695,579,2.695,610,2.695,614,3.202,615,2.695,665,2.695,666,2.695,679,2.695,721,1.547,737,2.695,751,3.178,752,3.178,754,1.871,756,2.695,757,2.343,811,2.695,858,2.695,859,2.695,862,2.695,875,2.695,876,2.695,877,3.228,878,3.228,879,6.179,880,3.178,881,5.568,882,2.343,883,5.568,884,2.695,885,2.695,886,2.695,887,3.178,888,2.695,889,2.695,890,4.378,891,3.228,892,3.228,893,3.228,894,2.695,895,2.695,896,2.695,897,4.378,898,4.378,899,4.378,900,3.228,901,3.228,902,3.228,903,3.228,904,2.695,905,3.228,906,3.228,907,3.228,908,3.228,909,3.228,910,4.378,911,3.228,912,3.228,913,3.228,914,3.228,915,3.228,916,3.228,917,3.228,918,3.228,919,3.655,920,2.695,921,3.228,922,3.228,923,3.228,924,2.695,925,2.695,926,2.695,927,3.228,928,3.228]],["title/dependencies.html",[929,2.24,930,2.793]],["body/dependencies.html",[19,0.033,21,0.745,22,2.098,63,0.026,64,0.026,105,1.921,135,3.654,136,3.654,330,2.822,342,2.301,390,3.654,427,3.654,428,3.177,432,3.177,930,3.177,931,4.377,932,6.36,933,4.377,934,5.326,935,4.377,936,4.377,937,5.326,938,4.446,939,4.377,940,4.377,941,4.377,942,3.654,943,4.377,944,5.326,945,4.377,946,4.377,947,3.654,948,4.377,949,4.377,950,4.377,951,4.377,952,4.377,953,4.377]],["title/miscellaneous/enumerations.html",[954,1.41,955,3.212]],["body/miscellaneous/enumerations.html",[19,0.031,61,1.148,63,0.028,64,0.028,70,0.337,87,3.244,100,1.045,365,3.607,433,4.062,954,2.499,955,3.969,956,4.755,957,5.596,958,4.755,959,4.755,960,5.596,961,5.596,962,4.755,963,4.671]],["title/miscellaneous/functions.html",[954,1.41,964,3.212]],["body/miscellaneous/functions.html",[19,0.031,31,1.172,61,0.888,63,0.026,64,0.026,70,0.307,75,0.9,90,2.301,91,2.301,96,1.52,99,0.81,100,0.737,117,2.725,119,3.142,137,1.899,182,3.613,314,4.147,340,3.41,880,3.142,882,3.84,885,3.613,886,4.416,887,3.142,888,4.416,894,3.613,895,4.416,896,4.769,924,3.613,925,4.416,954,2.275,964,3.613,965,4.328,966,4.328,967,3.613,968,3.613,969,4.328,970,4.328,971,5.29,972,4.328,973,3.613,974,5.29,975,4.328]],["title/index.html",[70,0.19,976,2.683,977,2.683]],["body/index.html",[19,0.027,34,1.367,37,1.099,47,0.916,61,0.848,63,0.02,64,0.02,75,0.875,82,2.662,87,3.132,119,2.153,154,1.98,249,1.812,253,1.812,258,2.371,263,2.998,269,1.98,273,1.912,275,2.732,290,2.153,302,2.476,308,2.998,310,1.301,311,1.301,312,2.998,365,1.912,374,1.664,384,1.912,428,2.153,457,2.998,505,3.967,507,3.45,508,3.967,531,3.132,532,3.313,611,2.662,612,2.476,667,2.998,688,3.448,702,2.476,876,4.51,930,2.153,938,3.448,942,3.448,947,4.791,963,4.29,978,2.153,979,5.139,980,4.752,981,2.966,982,2.966,983,2.966,984,2.966,985,4.13,986,5.139,987,5.595,988,5.139,989,4.752,990,2.966,991,4.13,992,2.966,993,2.966,994,4.752,995,2.966,996,4.752,997,4.752,998,2.966,999,2.966,1000,4.752,1001,2.966,1002,2.966,1003,2.966,1004,4.13,1005,4.13,1006,2.966,1007,2.966,1008,2.966,1009,2.966,1010,2.966,1011,2.966,1012,4.752,1013,2.966,1014,2.966,1015,2.966,1016,2.966,1017,2.966,1018,2.966,1019,2.966,1020,2.966,1021,2.966,1022,4.13,1023,2.966,1024,2.966,1025,2.966,1026,5.595,1027,5.854,1028,2.966,1029,2.966,1030,4.13,1031,2.966,1032,5.74,1033,2.966,1034,2.966,1035,2.966,1036,2.966,1037,5.139,1038,2.966,1039,4.13,1040,4.13,1041,4.13,1042,2.966,1043,5.139,1044,2.966,1045,2.966,1046,2.966,1047,2.966,1048,2.966,1049,2.476,1050,4.13,1051,4.13,1052,4.13,1053,4.752,1054,2.966,1055,2.966,1056,2.966,1057,2.966,1058,2.966,1059,2.966,1060,2.966,1061,2.966,1062,2.966,1063,2.966]],["title/modules.html",[1064,3.635]],["body/modules.html",[19,0.029,63,0.029,64,0.029,1064,4.285]],["title/overview.html",[978,3.161]],["body/overview.html",[2,1.454,19,0.029,28,1.127,63,0.029,64,0.029,67,2.642,78,2.642,798,4.196,904,4.196,978,3.649,1065,5.781]],["title/properties.html",[71,0.371,929,2.24]],["body/properties.html",[19,0.03,63,0.029,64,0.029,71,0.491,1066,5.093,1067,5.093]],["title/miscellaneous/variables.html",[954,1.41,1068,3.212]],["body/miscellaneous/variables.html",[14,1.176,19,0.033,63,0.021,64,0.021,70,0.215,75,0.883,88,1.76,90,1.691,96,1.117,97,1.596,98,3.492,99,1.02,100,0.927,106,2.433,111,1.455,112,2.488,115,1.77,117,2.111,137,2.584,139,1.957,144,2.204,149,1.125,154,1.455,164,1.76,170,2.204,171,2.534,179,2.728,205,1.957,249,1.332,253,1.332,262,2.433,274,2.962,275,2.111,282,2.706,293,2.534,294,2.534,303,1.596,310,1.332,311,1.332,319,2.204,374,1.691,376,2.204,384,1.957,387,1.957,396,2.204,424,2.204,504,2.534,569,1.957,693,2.728,704,3.047,713,1.76,714,1.76,724,2.204,730,4.548,734,3.047,741,1.76,742,3.101,754,2.789,755,3.492,757,3.047,781,4.016,880,2.204,882,2.204,884,3.504,887,2.204,889,3.504,919,2.534,920,3.504,926,2.534,954,1.596,967,2.534,968,2.534,973,2.534,1049,2.534,1068,2.534,1069,3.036,1070,4.197,1071,3.036,1072,3.036,1073,3.036,1074,3.036,1075,3.036,1076,3.036,1077,3.036,1078,3.036,1079,3.036,1080,3.036,1081,3.036,1082,3.036,1083,3.036,1084,4.197,1085,3.036,1086,4.197,1087,3.036,1088,3.036,1089,3.036,1090,3.036,1091,3.036,1092,3.036,1093,3.036,1094,3.036,1095,3.036,1096,3.036,1097,3.036,1098,3.036,1099,3.036,1100,3.036,1101,4.811,1102,3.036,1103,4.197,1104,3.036,1105,3.036,1106,3.036,1107,3.036,1108,3.036]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":262,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1067,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":633,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["0.13.0",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["005cbb",{"_index":639,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["1",{"_index":798,"title":{},"body":{"components/TicketsComponent.html":{},"overview.html":{}}}],["1.2em",{"_index":646,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["1.5em",{"_index":644,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["1/3",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":396,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["10.8.2",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":904,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":620,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["18.0.0",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["18.1.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["18.1.1",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":623,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["2.3.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["2/16",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":630,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["3/9",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["4.4.3",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":173,"title":{},"body":{"injectables/AuthStore.html":{}}}],["4px",{"_index":631,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["5",{"_index":1065,"title":{},"body":{"overview.html":{}}}],["5/14",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":177,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["6",{"_index":854,"title":{},"body":{"injectables/TicketsService.html":{}}}],["6.0.1",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["757575",{"_index":647,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["768px",{"_index":557,"title":{},"body":{"injectables/LayoutService.html":{}}}],["8px",{"_index":627,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["9/10",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["_limit",{"_index":799,"title":{},"body":{"components/TicketsComponent.html":{},"injectables/TicketsService.html":{}}}],["_order",{"_index":856,"title":{},"body":{"injectables/TicketsService.html":{}}}],["_page",{"_index":796,"title":{},"body":{"components/TicketsComponent.html":{}}}],["_sort",{"_index":855,"title":{},"body":{"injectables/TicketsService.html":{}}}],["ability",{"_index":993,"title":{},"body":{"index.html":{}}}],["above",{"_index":1022,"title":{},"body":{"index.html":{}}}],["account_circle",{"_index":867,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["actions",{"_index":1014,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["additional",{"_index":990,"title":{},"body":{"index.html":{}}}],["admin",{"_index":963,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["admins",{"_index":989,"title":{},"body":{"index.html":{}}}],["again",{"_index":422,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["airplane_ticket",{"_index":537,"title":{},"body":{"injectables/LayoutService.html":{}}}],["align",{"_index":653,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["angular",{"_index":979,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":547,"title":{},"body":{"injectables/LayoutService.html":{}}}],["angular/common",{"_index":342,"title":{},"body":{"components/CreateTicketComponent.html":{},"directives/RoleDirective.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["angular/compiler",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":330,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":326,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["angular/material/card",{"_index":328,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketsComponent.html":{}}}],["angular/material/core",{"_index":720,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["angular/material/datepicker",{"_index":335,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["angular/material/divider",{"_index":499,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["angular/material/form",{"_index":331,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["angular/material/icon",{"_index":493,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{}}}],["angular/material/input",{"_index":333,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["angular/material/list",{"_index":498,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["angular/material/menu",{"_index":873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["angular/material/paginator",{"_index":750,"title":{},"body":{"components/TicketListComponent.html":{},"components/TicketsComponent.html":{}}}],["angular/material/progress",{"_index":436,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketsComponent.html":{}}}],["angular/material/select",{"_index":334,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["angular/material/sidenav",{"_index":494,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["angular/material/snack",{"_index":206,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/TicketsComponent.html":{}}}],["angular/material/toolbar",{"_index":492,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/ToolbarComponent.html":{}}}],["angular/platform",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1017,"title":{},"body":{"index.html":{}}}],["apiurl",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["app_initializer",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":980,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":857,"title":{},"body":{"injectables/TicketsService.html":{}}}],["auth",{"_index":119,"title":{},"body":{"injectables/AuthStore.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["auth.guard.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth.service",{"_index":199,"title":{},"body":{"injectables/AuthStore.html":{}}}],["auth.store",{"_index":572,"title":{},"body":{"directives/RoleDirective.html":{}}}],["auth/auth.store",{"_index":604,"title":{},"body":{"components/SignInComponent.html":{},"components/ToolbarComponent.html":{}}}],["auth/role.directive",{"_index":327,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketsComponent.html":{}}}],["authenticate",{"_index":1059,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{}}}],["authguard",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["authguard(role",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authinterceptor",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authpayload",{"_index":66,"title":{"interfaces/AuthPayload.html":{}},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":77,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"coverage.html":{}}}],["authstate",{"_index":565,"title":{},"body":{"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{}}}],["authstate.tokendecoded()?.role",{"_index":869,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["authstate.tokendecoded()?.username",{"_index":868,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["authstore",{"_index":117,"title":{"injectables/AuthStore.html":{}},"body":{"injectables/AuthStore.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authstore.token",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":148,"title":{},"body":{"injectables/AuthStore.html":{}}}],["average",{"_index":505,"title":{},"body":{"injectables/DashboardService.html":{},"index.html":{}}}],["average_price",{"_index":960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["background",{"_index":636,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["bar",{"_index":207,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketsComponent.html":{}}}],["barchartoptions",{"_index":372,"title":{},"body":{"components/DashboardChart.html":{}}}],["barcharttype",{"_index":373,"title":{},"body":{"components/DashboardChart.html":{}}}],["basechartdirective",{"_index":366,"title":{},"body":{"components/DashboardChart.html":{}}}],["based",{"_index":384,"title":{},"body":{"components/DashboardChart.html":{},"injectables/TicketsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":1007,"title":{},"body":{"index.html":{}}}],["bold",{"_index":643,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["boolean",{"_index":523,"title":{},"body":{"injectables/LayoutService.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{}}}],["border",{"_index":622,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["bottom",{"_index":640,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["box",{"_index":628,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["breakpointobserver",{"_index":514,"title":{},"body":{"injectables/LayoutService.html":{}}}],["breakpointstate",{"_index":546,"title":{},"body":{"injectables/LayoutService.html":{}}}],["browser",{"_index":938,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["business",{"_index":322,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["button",{"_index":597,"title":{},"body":{"components/SignInComponent.html":{}}}],["cancel",{"_index":247,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["canmatchfn",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["card",{"_index":616,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["card'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["card.component",{"_index":678,"title":{},"body":{"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{}}}],["card.component.ts",{"_index":615,"title":{},"body":{"components/TicketCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:88",{"_index":664,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["case",{"_index":446,"title":{},"body":{"components/DashboardChart.html":{}}}],["catch",{"_index":221,"title":{},"body":{"injectables/AuthStore.html":{}}}],["catcherror",{"_index":202,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["catcherror((e",{"_index":293,"title":{},"body":{"components/CreateTicketComponent.html":{},"miscellaneous/variables.html":{}}}],["catcherror((error",{"_index":419,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["catcherror(err",{"_index":171,"title":{},"body":{"injectables/AuthStore.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":1037,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":229,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["changedetectionstrategy",{"_index":325,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":230,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["changes",{"_index":553,"title":{},"body":{"injectables/LayoutService.html":{}}}],["chart",{"_index":365,"title":{},"body":{"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["chart'},{'name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["chart.component",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chart.component.ts",{"_index":362,"title":{},"body":{"components/DashboardChart.html":{},"coverage.html":{}}}],["chart.component.ts:102",{"_index":380,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:115",{"_index":385,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:123",{"_index":382,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:52",{"_index":402,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:53",{"_index":404,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:54",{"_index":410,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:56",{"_index":425,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:57",{"_index":408,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:58",{"_index":407,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:60",{"_index":412,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:61",{"_index":381,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:63",{"_index":399,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:78",{"_index":400,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.component.ts:83",{"_index":423,"title":{},"body":{"components/DashboardChart.html":{}}}],["chart.js",{"_index":432,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"dependencies.html":{}}}],["chart.update",{"_index":441,"title":{},"body":{"components/DashboardChart.html":{}}}],["chartconfiguration",{"_index":431,"title":{},"body":{"components/DashboardChart.html":{}}}],["chartconfiguration['options",{"_index":438,"title":{},"body":{"components/DashboardChart.html":{}}}],["chartdata",{"_index":418,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["charts",{"_index":428,"title":{},"body":{"components/DashboardChart.html":{},"dependencies.html":{},"index.html":{}}}],["children",{"_index":533,"title":{},"body":{"injectables/LayoutService.html":{}}}],["city",{"_index":251,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["class",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{}}}],["clear",{"_index":691,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["clearing",{"_index":152,"title":{},"body":{"injectables/AuthStore.html":{}}}],["cli",{"_index":1024,"title":{},"body":{"index.html":{}}}],["clickevent",{"_index":588,"title":{},"body":{"components/SignInComponent.html":{}}}],["clickevent(event",{"_index":589,"title":{},"body":{"components/SignInComponent.html":{}}}],["clicking",{"_index":596,"title":{},"body":{"components/SignInComponent.html":{}}}],["clone",{"_index":1030,"title":{},"body":{"index.html":{}}}],["clonedrequest",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":292,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketsComponent.html":{}}}],["color",{"_index":637,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["combination",{"_index":1002,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1013,"title":{},"body":{"index.html":{}}}],["completes",{"_index":222,"title":{},"body":{"injectables/AuthStore.html":{}}}],["compodoc",{"_index":1053,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["components/dashboard",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["components/ticket",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{},"components/TicketsComponent.html":{}}}],["computed",{"_index":160,"title":{},"body":{"injectables/AuthStore.html":{},"injectables/LayoutService.html":{}}}],["concatmap",{"_index":203,"title":{},"body":{"injectables/AuthStore.html":{}}}],["concatmap(payload",{"_index":165,"title":{},"body":{"injectables/AuthStore.html":{}}}],["console.log('average",{"_index":448,"title":{},"body":{"components/DashboardChart.html":{}}}],["console.log('here",{"_index":413,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["console.log('ticket",{"_index":456,"title":{},"body":{"components/DashboardChart.html":{}}}],["console.log(e",{"_index":294,"title":{},"body":{"components/CreateTicketComponent.html":{},"miscellaneous/variables.html":{}}}],["console.log(this.form.value",{"_index":343,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["const",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"components/SignInComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{}}}],["containing",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["content",{"_index":648,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["continue",{"_index":583,"title":{},"body":{"components/SignInComponent.html":{}}}],["convert",{"_index":822,"title":{},"body":{"injectables/TicketsService.html":{}}}],["converted",{"_index":823,"title":{},"body":{"injectables/TicketsService.html":{}}}],["converts",{"_index":820,"title":{},"body":{"injectables/TicketsService.html":{}}}],["count",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":875,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["created",{"_index":290,"title":{},"body":{"components/CreateTicketComponent.html":{},"injectables/TicketsService.html":{},"index.html":{}}}],["createeffect",{"_index":163,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["createeffect(pipe",{"_index":281,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["creates",{"_index":301,"title":{},"body":{"components/CreateTicketComponent.html":{},"injectables/TicketsService.html":{}}}],["createticket",{"_index":271,"title":{},"body":{"components/CreateTicketComponent.html":{},"injectables/TicketsService.html":{}}}],["createticket(ticket",{"_index":816,"title":{},"body":{"injectables/TicketsService.html":{}}}],["createticketcomponent",{"_index":33,"title":{"components/CreateTicketComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["credentials",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{}}}],["current",{"_index":704,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"miscellaneous/variables.html":{}}}],["d7e3ff",{"_index":638,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["dashboard",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["dashboard'},{'name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["dashboard/tickets",{"_index":538,"title":{},"body":{"injectables/LayoutService.html":{}}}],["dashboardchart",{"_index":36,"title":{"components/DashboardChart.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["dashboardcharttypeenum",{"_index":433,"title":{},"body":{"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dashboardcharttypeenum.average_price",{"_index":447,"title":{},"body":{"components/DashboardChart.html":{}}}],["dashboardcharttypeenum.ticket_sales",{"_index":455,"title":{},"body":{"components/DashboardChart.html":{}}}],["dashboardcomponent",{"_index":39,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["dashboardlayoutcomponent",{"_index":41,"title":{"components/DashboardLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["dashboardservice",{"_index":429,"title":{"injectables/DashboardService.html":{}},"body":{"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"coverage.html":{}}}],["data",{"_index":374,"title":{},"body":{"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data[key",{"_index":453,"title":{},"body":{"components/DashboardChart.html":{}}}],["datasets",{"_index":406,"title":{},"body":{"components/DashboardChart.html":{}}}],["date",{"_index":263,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{},"index.html":{}}}],["date(datestring",{"_index":732,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["date(params.from_date).tolocaledatestring",{"_index":839,"title":{},"body":{"injectables/TicketsService.html":{}}}],["date(params.to_date).tolocaledatestring",{"_index":842,"title":{},"body":{"injectables/TicketsService.html":{}}}],["date(this.form.value.from_date).tolocaledatestring",{"_index":349,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["date(this.form.value.to_date).tolocaledatestring",{"_index":351,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["date_range",{"_index":1003,"title":{},"body":{"index.html":{}}}],["dateadapter",{"_index":719,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["datepipe",{"_index":617,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["daterangevalidator",{"_index":314,"title":{},"body":{"components/CreateTicketComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["datestring",{"_index":709,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["deals",{"_index":667,"title":{},"body":{"components/TicketDealsComponent.html":{},"injectables/TicketsService.html":{},"index.html":{}}}],["deals'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["deals.component",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deals.component.ts",{"_index":666,"title":{},"body":{"components/TicketDealsComponent.html":{},"coverage.html":{}}}],["deals.component.ts:40",{"_index":671,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["deals.component.ts:41",{"_index":675,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["deals.component.ts:42",{"_index":672,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["deals.component.ts:43",{"_index":676,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["deals.component.ts:45",{"_index":670,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["deals.component.ts:52",{"_index":674,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["decode",{"_index":136,"title":{},"body":{"injectables/AuthStore.html":{},"dependencies.html":{}}}],["decoded",{"_index":138,"title":{},"body":{"injectables/AuthStore.html":{}}}],["decoded.interface",{"_index":198,"title":{},"body":{"injectables/AuthStore.html":{}}}],["decoded.interface.ts",{"_index":859,"title":{},"body":{"interfaces/TokenDecoded.html":{},"coverage.html":{}}}],["decodes",{"_index":134,"title":{},"body":{"injectables/AuthStore.html":{}}}],["decodetoken",{"_index":126,"title":{},"body":{"injectables/AuthStore.html":{}}}],["decodetoken(token",{"_index":132,"title":{},"body":{"injectables/AuthStore.html":{}}}],["decoding",{"_index":140,"title":{},"body":{"injectables/AuthStore.html":{}}}],["default",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":216,"title":{},"body":{"injectables/AuthStore.html":{}}}],["defined",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{}}}],["departure",{"_index":659,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["dependencies",{"_index":930,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deps",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{}}}],["detect",{"_index":550,"title":{},"body":{"injectables/LayoutService.html":{}}}],["dev",{"_index":1044,"title":{},"body":{"index.html":{}}}],["development",{"_index":1039,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1051,"title":{},"body":{"index.html":{}}}],["directive",{"_index":28,"title":{"directives/RoleDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["dismiss",{"_index":175,"title":{},"body":{"injectables/AuthStore.html":{}}}],["display",{"_index":398,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketCardComponent.html":{},"components/TicketListComponent.html":{}}}],["documentation",{"_index":876,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["duplicate",{"_index":1005,"title":{},"body":{"index.html":{}}}],["duration",{"_index":176,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["dynamic",{"_index":390,"title":{},"body":{"components/DashboardChart.html":{},"dependencies.html":{}}}],["e",{"_index":299,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["e0e0e0",{"_index":625,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["earlier",{"_index":267,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["economy",{"_index":321,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["effect",{"_index":201,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"directives/RoleDirective.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{}}}],["element",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["element.icon",{"_index":488,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["element.title",{"_index":489,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["elementref",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["emitevent",{"_index":729,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["emits",{"_index":700,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["empty",{"_index":387,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":690,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["ensure",{"_index":1060,"title":{},"body":{"index.html":{}}}],["enter",{"_index":582,"title":{},"body":{"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["enumerations",{"_index":955,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/dashboard",{"_index":434,"title":{},"body":{"components/DashboardChart.html":{},"components/DashboardComponent.html":{}}}],["enums/role.enum",{"_index":573,"title":{},"body":{"directives/RoleDirective.html":{},"components/TicketsComponent.html":{}}}],["environment",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/dashboard/average",{"_index":512,"title":{},"body":{"injectables/DashboardService.html":{}}}],["environment.apiurl}/dashboard/ticket",{"_index":510,"title":{},"body":{"injectables/DashboardService.html":{}}}],["environment.apiurl}/tickets",{"_index":830,"title":{},"body":{"injectables/TicketsService.html":{}}}],["environments/environment",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["err",{"_index":182,"title":{},"body":{"injectables/AuthStore.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":179,"title":{},"body":{"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"miscellaneous/variables.html":{}}}],["errormessage",{"_index":587,"title":{},"body":{"components/SignInComponent.html":{}}}],["event",{"_index":593,"title":{},"body":{"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{}}}],["event.from_date",{"_index":804,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.from_price",{"_index":808,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.inbound",{"_index":806,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.outbound",{"_index":807,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.pageindex",{"_index":797,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.pagesize",{"_index":800,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.stoppropagation",{"_index":606,"title":{},"body":{"components/SignInComponent.html":{}}}],["event.to_date",{"_index":805,"title":{},"body":{"components/TicketsComponent.html":{}}}],["event.to_price",{"_index":809,"title":{},"body":{"components/TicketsComponent.html":{}}}],["events",{"_index":767,"title":{},"body":{"components/TicketsComponent.html":{}}}],["example",{"_index":1032,"title":{},"body":{"index.html":{}}}],["exp",{"_index":860,"title":{},"body":{"interfaces/TokenDecoded.html":{}}}],["expliciteffect",{"_index":210,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["expliciteffect([this.store.state",{"_index":780,"title":{},"body":{"components/TicketsComponent.html":{}}}],["expliciteffect([this.tokenstorage",{"_index":212,"title":{},"body":{"injectables/AuthStore.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{}}}],["fails",{"_index":141,"title":{},"body":{"injectables/AuthStore.html":{}}}],["false",{"_index":730,"title":{},"body":{"components/TicketFiltersComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":272,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["features",{"_index":998,"title":{},"body":{"index.html":{}}}],["fetches",{"_index":383,"title":{},"body":{"components/DashboardChart.html":{},"injectables/TicketsService.html":{}}}],["fetching",{"_index":827,"title":{},"body":{"injectables/TicketsService.html":{}}}],["field",{"_index":332,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["fields",{"_index":1001,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["filter",{"_index":988,"title":{},"body":{"index.html":{}}}],["filters",{"_index":680,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["filters.component",{"_index":776,"title":{},"body":{"components/TicketsComponent.html":{}}}],["filters.component.ts",{"_index":679,"title":{},"body":{"components/TicketFiltersComponent.html":{},"coverage.html":{}}}],["filters.component.ts:100",{"_index":697,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:117",{"_index":707,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:125",{"_index":703,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:132",{"_index":698,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:89",{"_index":712,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:90",{"_index":716,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:91",{"_index":718,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["filters.component.ts:93",{"_index":715,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["finished",{"_index":224,"title":{},"body":{"injectables/AuthStore.html":{}}}],["first",{"_index":323,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["flight",{"_index":531,"title":{},"body":{"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["font",{"_index":641,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["footer",{"_index":650,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["form",{"_index":273,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"index.html":{}}}],["form.controls.from_date.haserror('matstartdateinvalid",{"_index":686,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["form.controls.from_date.haserror(\\'matstartdateinvalid",{"_index":735,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["form.controls.to_date.haserror('matenddateinvalid",{"_index":689,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["form.controls.to_date.haserror(\\'matenddateinvalid",{"_index":736,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["form.get('from_date')?.haserror('required",{"_index":264,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('inbound')?.haserror('required",{"_index":250,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('outbound')?.haserror('required",{"_index":254,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('price')?.haserror('min",{"_index":260,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('price')?.haserror('required",{"_index":259,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('seat_number')?.haserror('required",{"_index":270,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('ticket_type')?.haserror('required",{"_index":257,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get('to_date')?.haserror('required",{"_index":265,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'from_date\\')?.haserror(\\'required",{"_index":357,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'inbound\\')?.haserror(\\'required",{"_index":352,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'outbound\\')?.haserror(\\'required",{"_index":353,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'price\\')?.haserror(\\'min",{"_index":356,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'price\\')?.haserror(\\'required",{"_index":355,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'seat_number\\')?.haserror(\\'required",{"_index":360,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'ticket_type\\')?.haserror(\\'required",{"_index":354,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.get(\\'to_date\\')?.haserror(\\'required",{"_index":358,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.haserror('daterangeinvalid",{"_index":266,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["form.haserror(\\'daterangeinvalid",{"_index":359,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["formbuilder",{"_index":329,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["found",{"_index":669,"title":{},"body":{"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{}}}],["from_date",{"_index":310,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["from_price",{"_index":713,"title":{},"body":{"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["fromobject",{"_index":853,"title":{},"body":{"injectables/TicketsService.html":{}}}],["function",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["functionalities",{"_index":1058,"title":{},"body":{"index.html":{}}}],["functions",{"_index":964,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1052,"title":{},"body":{"index.html":{}}}],["getaveragepricebytickettype",{"_index":501,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdatabytype",{"_index":377,"title":{},"body":{"components/DashboardChart.html":{}}}],["getparams",{"_index":813,"title":{},"body":{"injectables/TicketsService.html":{}}}],["getparams(params",{"_index":818,"title":{},"body":{"injectables/TicketsService.html":{}}}],["gets",{"_index":504,"title":{},"body":{"injectables/DashboardService.html":{},"miscellaneous/variables.html":{}}}],["getstate(store",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstate(store).params",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getticketdeals",{"_index":814,"title":{},"body":{"injectables/TicketsService.html":{}}}],["gettickets",{"_index":815,"title":{},"body":{"injectables/TicketsService.html":{}}}],["gettickets(params",{"_index":825,"title":{},"body":{"injectables/TicketsService.html":{}}}],["getticketsalesovertime",{"_index":502,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getting",{"_index":976,"title":{"index.html":{}},"body":{}}],["git",{"_index":1033,"title":{},"body":{"index.html":{}}}],["greater",{"_index":261,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["handlerequesterror",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlerequesterror(err",{"_index":973,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":765,"title":{},"body":{"components/TicketsComponent.html":{}}}],["header",{"_index":635,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["hide",{"_index":584,"title":{},"body":{"components/SignInComponent.html":{}}}],["home",{"_index":535,"title":{},"body":{"injectables/LayoutService.html":{}}}],["hostdirectives",{"_index":563,"title":{},"body":{"directives/RoleDirective.html":{}}}],["html",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["http",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["http://localhost:3000",{"_index":1049,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1042,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1057,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["httperrorresponse",{"_index":974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httphandlerfn",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparams",{"_index":821,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httpparams.set('from_date_gte",{"_index":838,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httpparams.set('inbound_like",{"_index":844,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httpparams.set('outbound_like",{"_index":846,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httpparams.set('price_gte",{"_index":848,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httpparams.set('price_lte",{"_index":851,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httpparams.set('to_date_lte",{"_index":841,"title":{},"body":{"injectables/TicketsService.html":{}}}],["httprequest",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpresponse",{"_index":829,"title":{},"body":{"injectables/TicketsService.html":{}}}],["https://github.com/your",{"_index":1034,"title":{},"body":{"index.html":{}}}],["iat",{"_index":861,"title":{},"body":{"interfaces/TokenDecoded.html":{}}}],["icon",{"_index":534,"title":{},"body":{"injectables/LayoutService.html":{}}}],["id",{"_index":611,"title":{},"body":{"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"interfaces/TokenDecoded.html":{},"index.html":{}}}],["identifier",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["if(!datestring",{"_index":731,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["if(err.status",{"_index":172,"title":{},"body":{"injectables/AuthStore.html":{}}}],["if(this.form.invalid",{"_index":607,"title":{},"body":{"components/SignInComponent.html":{}}}],["if(token",{"_index":214,"title":{},"body":{"injectables/AuthStore.html":{}}}],["implements",{"_index":363,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"components/TicketsComponent.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{}}}],["imports",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["in'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["in.component.ts",{"_index":579,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:77",{"_index":601,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:78",{"_index":599,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:80",{"_index":603,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:81",{"_index":600,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:82",{"_index":602,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:91",{"_index":591,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:99",{"_index":598,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":578,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["inbound",{"_index":249,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["including",{"_index":992,"title":{},"body":{"index.html":{}}}],["index",{"_index":70,"title":{"index.html":{}},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{}}}],["init",{"_index":127,"title":{},"body":{"injectables/AuthStore.html":{}}}],["initializeapp",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initializeapp(auth",{"_index":975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":143,"title":{},"body":{"injectables/AuthStore.html":{}}}],["initialstate",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{}}}],["inject(authservice",{"_index":158,"title":{},"body":{"injectables/AuthStore.html":{}}}],["inject(authstore",{"_index":569,"title":{},"body":{"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(breakpointobserver",{"_index":526,"title":{},"body":{"injectables/LayoutService.html":{}}}],["inject(dashboardservice",{"_index":403,"title":{},"body":{"components/DashboardChart.html":{}}}],["inject(formbuilder",{"_index":304,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["inject(httpclient",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["inject(injector",{"_index":409,"title":{},"body":{"components/DashboardChart.html":{}}}],["inject(layoutservice",{"_index":490,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/ToolbarComponent.html":{}}}],["inject(matsnackbar",{"_index":186,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/TicketsComponent.html":{}}}],["inject(ngif",{"_index":571,"title":{},"body":{"directives/RoleDirective.html":{}}}],["inject(router",{"_index":184,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["inject(ticketliststore",{"_index":774,"title":{},"body":{"components/TicketsComponent.html":{}}}],["inject(ticketsservice",{"_index":319,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketDealsComponent.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"injectables/TicketsService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"injectables/TicketsService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"injectables/TicketsService.html":{},"overview.html":{}}}],["injectlocalstorage",{"_index":208,"title":{},"body":{"injectables/AuthStore.html":{}}}],["injectlocalstorage('token",{"_index":192,"title":{},"body":{"injectables/AuthStore.html":{}}}],["injector",{"_index":375,"title":{},"body":{"components/DashboardChart.html":{}}}],["injectqueryparams",{"_index":770,"title":{},"body":{"components/TicketsComponent.html":{}}}],["input",{"_index":411,"title":{},"body":{"components/DashboardChart.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{}}}],["input.required",{"_index":437,"title":{},"body":{"components/DashboardChart.html":{},"directives/RoleDirective.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{}}}],["inputs",{"_index":379,"title":{},"body":{"components/DashboardChart.html":{},"directives/RoleDirective.html":{},"components/TicketCardComponent.html":{},"components/TicketListComponent.html":{}}}],["install",{"_index":942,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["installrunning",{"_index":1038,"title":{},"body":{"index.html":{}}}],["interface",{"_index":65,"title":{"interfaces/AuthPayload.html":{},"interfaces/Ticket.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"interfaces/TokenDecoded.html":{}},"body":{"interfaces/AuthPayload.html":{},"interfaces/Ticket.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"interfaces/TokenDecoded.html":{},"coverage.html":{}}}],["interfaces",{"_index":67,"title":{},"body":{"interfaces/AuthPayload.html":{},"interfaces/Ticket.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"interfaces/TokenDecoded.html":{},"overview.html":{}}}],["invalid",{"_index":687,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["isauthenticated",{"_index":120,"title":{},"body":{"injectables/AuthStore.html":{}}}],["json",{"_index":1026,"title":{},"body":{"index.html":{}}}],["jsonpipe",{"_index":246,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{}}}],["jwt",{"_index":135,"title":{},"body":{"injectables/AuthStore.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":196,"title":{},"body":{"injectables/AuthStore.html":{}}}],["jwtdecode(token",{"_index":220,"title":{},"body":{"injectables/AuthStore.html":{}}}],["label",{"_index":370,"title":{},"body":{"components/DashboardChart.html":{}}}],["labels",{"_index":405,"title":{},"body":{"components/DashboardChart.html":{}}}],["layout",{"_index":470,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/ToolbarComponent.html":{}}}],["layout'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["layout.component.ts",{"_index":469,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:78",{"_index":491,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.service",{"_index":497,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/ToolbarComponent.html":{}}}],["layout.sidenavcontent",{"_index":485,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layoutservice",{"_index":496,"title":{"injectables/LayoutService.html":{}},"body":{"components/DashboardLayoutComponent.html":{},"injectables/LayoutService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["legend",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["link",{"_index":536,"title":{},"body":{"injectables/LayoutService.html":{}}}],["list",{"_index":738,"title":{},"body":{"components/TicketListComponent.html":{},"injectables/TicketsService.html":{}}}],["list'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["list.component",{"_index":777,"title":{},"body":{"components/TicketsComponent.html":{}}}],["list.component.ts",{"_index":737,"title":{},"body":{"components/TicketListComponent.html":{},"coverage.html":{}}}],["list.component.ts:39",{"_index":748,"title":{},"body":{"components/TicketListComponent.html":{}}}],["list.component.ts:45",{"_index":745,"title":{},"body":{"components/TicketListComponent.html":{}}}],["list.component.ts:50",{"_index":744,"title":{},"body":{"components/TicketListComponent.html":{}}}],["list.component.ts:55",{"_index":746,"title":{},"body":{"components/TicketListComponent.html":{}}}],["list.component.ts:60",{"_index":747,"title":{},"body":{"components/TicketListComponent.html":{}}}],["load",{"_index":376,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":755,"title":{},"body":{"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":274,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":424,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":146,"title":{},"body":{"injectables/AuthStore.html":{}}}],["log",{"_index":999,"title":{},"body":{"index.html":{}}}],["login",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"index.html":{}}}],["login(payload",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":128,"title":{},"body":{"injectables/AuthStore.html":{},"components/ToolbarComponent.html":{}}}],["logs",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{}}}],["managing",{"_index":981,"title":{},"body":{"index.html":{}}}],["map",{"_index":204,"title":{},"body":{"injectables/AuthStore.html":{},"components/DashboardChart.html":{}}}],["map((data",{"_index":450,"title":{},"body":{"components/DashboardChart.html":{}}}],["margin",{"_index":619,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["mat",{"_index":634,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["matbutton",{"_index":231,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["matcard",{"_index":233,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketsComponent.html":{}}}],["matcardcontent",{"_index":234,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketsComponent.html":{}}}],["matcardfooter",{"_index":618,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["matcardheader",{"_index":367,"title":{},"body":{"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{}}}],["matcardsubtitle",{"_index":580,"title":{},"body":{"components/SignInComponent.html":{},"components/TicketCardComponent.html":{}}}],["matcardtitle",{"_index":368,"title":{},"body":{"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepicker",{"_index":242,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["matdatepickerinput",{"_index":240,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["matdatepickertoggle",{"_index":241,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["matdaterangeinput",{"_index":681,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["matdaterangepicker",{"_index":682,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["matdivider",{"_index":479,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matdrawer",{"_index":476,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matdrawercontainer",{"_index":474,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matdrawercontent",{"_index":475,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matenddate",{"_index":684,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["materror",{"_index":243,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["matformfield",{"_index":235,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["mathint",{"_index":685,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["maticon",{"_index":472,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{}}}],["maticonbutton",{"_index":473,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{}}}],["matinput",{"_index":237,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["matlabel",{"_index":244,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["matlist",{"_index":477,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matlistitem",{"_index":478,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matlistitemicon",{"_index":481,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matlistitemtitle",{"_index":482,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matlistsubheadercssmatstyler",{"_index":480,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["matmenu",{"_index":864,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["matmenuitem",{"_index":865,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["matmenutrigger",{"_index":863,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["matoption",{"_index":239,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["matpaginator",{"_index":739,"title":{},"body":{"components/TicketListComponent.html":{}}}],["matprogressbar",{"_index":369,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketsComponent.html":{}}}],["matselect",{"_index":238,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["matsnackbar",{"_index":205,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["matstartdate",{"_index":683,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["matsuffix",{"_index":245,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["mattoolbar",{"_index":471,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/ToolbarComponent.html":{}}}],["max",{"_index":555,"title":{},"body":{"injectables/LayoutService.html":{}}}],["menu",{"_index":866,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["merge",{"_index":802,"title":{},"body":{"components/TicketsComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{}}}],["migratethe",{"_index":1047,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":1045,"title":{},"body":{"index.html":{}}}],["min",{"_index":395,"title":{},"body":{"components/DashboardChart.html":{}}}],["miscellaneous",{"_index":954,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":541,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mode",{"_index":515,"title":{},"body":{"injectables/LayoutService.html":{}}}],["models/auth",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{}}}],["models/ticket",{"_index":722,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{}}}],["models/ticket.interface",{"_index":338,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{},"injectables/TicketsService.html":{}}}],["models/token",{"_index":197,"title":{},"body":{"injectables/AuthStore.html":{}}}],["modules",{"_index":1064,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mouse",{"_index":594,"title":{},"body":{"components/SignInComponent.html":{}}}],["mouseevent",{"_index":590,"title":{},"body":{"components/SignInComponent.html":{}}}],["multi",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multiple",{"_index":994,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":1041,"title":{},"body":{"index.html":{}}}],["navigating",{"_index":153,"title":{},"body":{"injectables/AuthStore.html":{}}}],["new",{"_index":279,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{},"injectables/TicketsService.html":{},"coverage.html":{}}}],["newparams",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(clonedrequest).pipe",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng2",{"_index":427,"title":{},"body":{"components/DashboardChart.html":{},"dependencies.html":{}}}],["ngif",{"_index":564,"title":{},"body":{"directives/RoleDirective.html":{}}}],["ngifref",{"_index":566,"title":{},"body":{"directives/RoleDirective.html":{}}}],["ngoninit",{"_index":378,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"components/TicketsComponent.html":{}}}],["ngrx/signals",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["ngxtension",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["ngxtension/create",{"_index":200,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["ngxtension/explicit",{"_index":211,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["ngxtension/inject",{"_index":209,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["node.js",{"_index":1020,"title":{},"body":{"index.html":{}}}],["nonauthguard",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["npm",{"_index":947,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["npx",{"_index":1055,"title":{},"body":{"index.html":{}}}],["null",{"_index":137,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"injectables/TicketsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":269,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"interfaces/TokenDecoded.html":{},"index.html":{}}}],["number(response.headers.get('x",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(this.queryparams()['_limit",{"_index":788,"title":{},"body":{"components/TicketsComponent.html":{}}}],["number(this.queryparams()['_page",{"_index":786,"title":{},"body":{"components/TicketsComponent.html":{}}}],["object",{"_index":139,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketFiltersComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data",{"_index":451,"title":{},"body":{"components/DashboardChart.html":{}}}],["object.keys(data).map((key",{"_index":452,"title":{},"body":{"components/DashboardChart.html":{}}}],["observable",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["observe",{"_index":831,"title":{},"body":{"injectables/TicketsService.html":{}}}],["occurred",{"_index":180,"title":{},"body":{"injectables/AuthStore.html":{}}}],["one",{"_index":1015,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/DashboardChart.html":{},"components/DashboardLayoutComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["onpagination",{"_index":760,"title":{},"body":{"components/TicketsComponent.html":{}}}],["onpagination(event",{"_index":763,"title":{},"body":{"components/TicketsComponent.html":{}}}],["onreset",{"_index":694,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["onsave",{"_index":276,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["onsearch",{"_index":695,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{}}}],["onsearch(event",{"_index":768,"title":{},"body":{"components/TicketsComponent.html":{}}}],["open",{"_index":1040,"title":{},"body":{"index.html":{}}}],["optional",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1046,"title":{},"body":{"index.html":{}}}],["others",{"_index":1011,"title":{},"body":{"index.html":{}}}],["out",{"_index":151,"title":{},"body":{"injectables/AuthStore.html":{}}}],["outbound",{"_index":253,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":717,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{}}}],["outputs",{"_index":743,"title":{},"body":{"components/TicketListComponent.html":{}}}],["over",{"_index":507,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["overview",{"_index":978,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":649,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["package",{"_index":929,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":621,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["page",{"_index":154,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagechange",{"_index":740,"title":{},"body":{"components/TicketListComponent.html":{}}}],["pageevent",{"_index":749,"title":{},"body":{"components/TicketListComponent.html":{},"components/TicketsComponent.html":{}}}],["pagesize",{"_index":741,"title":{},"body":{"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":766,"title":{},"body":{"components/TicketsComponent.html":{}}}],["param",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":693,"title":{},"body":{"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["params.from_date",{"_index":837,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.from_price",{"_index":847,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.from_price.tostring",{"_index":849,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.inbound",{"_index":843,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.outbound",{"_index":845,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.page.tostring",{"_index":834,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.pagesize.tostring",{"_index":836,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.to_date",{"_index":840,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.to_price",{"_index":850,"title":{},"body":{"injectables/TicketsService.html":{}}}],["params.to_price.tostring",{"_index":852,"title":{},"body":{"injectables/TicketsService.html":{}}}],["parse",{"_index":710,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["parsed",{"_index":711,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["parsedate",{"_index":696,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["parsedate(datestring",{"_index":705,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["parses",{"_index":708,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["part",{"_index":1018,"title":{},"body":{"index.html":{}}}],["partial",{"_index":734,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":72,"title":{},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{}}}],["patchstate(store",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["payload",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{}}}],["payload.interface",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{}}}],["payload.interface.ts",{"_index":69,"title":{},"body":{"interfaces/AuthPayload.html":{},"coverage.html":{}}}],["pipe",{"_index":164,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"miscellaneous/variables.html":{}}}],["placeholders",{"_index":389,"title":{},"body":{"components/DashboardChart.html":{}}}],["please",{"_index":421,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["plugins",{"_index":397,"title":{},"body":{"components/DashboardChart.html":{}}}],["positive",{"_index":1006,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1019,"title":{},"body":{"index.html":{}}}],["price",{"_index":258,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"injectables/TicketsService.html":{},"index.html":{}}}],["private",{"_index":812,"title":{},"body":{"injectables/TicketsService.html":{}}}],["privileges",{"_index":991,"title":{},"body":{"index.html":{}}}],["process",{"_index":223,"title":{},"body":{"injectables/AuthStore.html":{}}}],["properties",{"_index":71,"title":{"properties.html":{}},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"properties.html":{}}}],["protected",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["provide",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providecharts(withdefaultregisterables",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"injectables/TicketsService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptors([authinterceptor",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providenativedateadapter",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":724,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":125,"title":{},"body":{"injectables/AuthStore.html":{}}}],["query",{"_index":779,"title":{},"body":{"components/TicketsComponent.html":{}}}],["queryparams",{"_index":759,"title":{},"body":{"components/TicketsComponent.html":{}}}],["queryparamshandling",{"_index":801,"title":{},"body":{"components/TicketsComponent.html":{}}}],["radius",{"_index":626,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["range",{"_index":340,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reactiveformsmodule",{"_index":236,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["readonly",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirection",{"_index":997,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1016,"title":{},"body":{"index.html":{}}}],["repo/flight",{"_index":1035,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1031,"title":{},"body":{"index.html":{}}}],["request",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.clone",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":252,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"directives/RoleDirective.html":{},"components/TicketCardComponent.html":{},"components/TicketListComponent.html":{}}}],["reset",{"_index":701,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["resets",{"_index":699,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["response",{"_index":170,"title":{},"body":{"injectables/AuthStore.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["response.body",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.matches",{"_index":559,"title":{},"body":{"injectables/LayoutService.html":{}}}],["results",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":371,"title":{},"body":{"components/DashboardChart.html":{}}}],["return",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"injectables/TicketsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["revenue",{"_index":1063,"title":{},"body":{"index.html":{}}}],["rgba(0",{"_index":632,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["right",{"_index":654,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["role",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["roledirective",{"_index":60,"title":{"directives/RoleDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["roles",{"_index":985,"title":{},"body":{"index.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"injectables/TicketsService.html":{}}}],["root'},{'name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["router",{"_index":121,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{}}}],["routerlink",{"_index":232,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["routerlinkactive",{"_index":483,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routeroutlet",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["run",{"_index":1043,"title":{},"body":{"index.html":{}}}],["running",{"_index":1048,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"components/TicketDealsComponent.html":{},"injectables/TicketsService.html":{},"dependencies.html":{}}}],["rxmethod",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":1056,"title":{},"body":{"index.html":{}}}],["sales",{"_index":457,"title":{},"body":{"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"index.html":{}}}],["same",{"_index":1000,"title":{},"body":{"index.html":{}}}],["save",{"_index":248,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["saves",{"_index":278,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["scales",{"_index":392,"title":{},"body":{"components/DashboardChart.html":{}}}],["screen",{"_index":551,"title":{},"body":{"injectables/LayoutService.html":{}}}],["search",{"_index":692,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{}}}],["seat",{"_index":268,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketCardComponent.html":{}}}],["seat_number",{"_index":312,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"index.html":{}}}],["section",{"_index":484,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["section.children",{"_index":487,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["section.title",{"_index":486,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["serve",{"_index":1054,"title":{},"body":{"index.html":{}}}],["server",{"_index":1027,"title":{},"body":{"index.html":{}}}],["services/dashboard.service",{"_index":430,"title":{},"body":{"components/DashboardChart.html":{}}}],["services/tickets.service",{"_index":336,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketDealsComponent.html":{}}}],["set('_limit",{"_index":835,"title":{},"body":{"injectables/TicketsService.html":{}}}],["set('_page",{"_index":833,"title":{},"body":{"injectables/TicketsService.html":{}}}],["setheaders",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":157,"title":{},"body":{"injectables/AuthStore.html":{}}}],["setsidenav",{"_index":519,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setsidenav(value",{"_index":522,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setting",{"_index":145,"title":{},"body":{"injectables/AuthStore.html":{}}}],["settoken",{"_index":129,"title":{},"body":{"injectables/AuthStore.html":{}}}],["settoken(token",{"_index":155,"title":{},"body":{"injectables/AuthStore.html":{}}}],["setup",{"_index":1029,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":629,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["side",{"_index":542,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sidenavcontent",{"_index":516,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sidenavmode",{"_index":517,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sidenavopened",{"_index":518,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sign",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["signal",{"_index":195,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{}}}],["signal('desktop",{"_index":528,"title":{},"body":{"injectables/LayoutService.html":{}}}],["signal(false",{"_index":316,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["signal(null",{"_index":188,"title":{},"body":{"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{}}}],["signal(true",{"_index":544,"title":{},"body":{"injectables/LayoutService.html":{},"components/SignInComponent.html":{}}}],["signalstore",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signincomponent",{"_index":43,"title":{"components/SignInComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["simultaneously",{"_index":995,"title":{},"body":{"index.html":{}}}],["size",{"_index":552,"title":{},"body":{"injectables/LayoutService.html":{},"components/TicketCardComponent.html":{},"components/TicketListComponent.html":{}}}],["snackbar",{"_index":122,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/TicketsComponent.html":{}}}],["sold",{"_index":1008,"title":{},"body":{"index.html":{}}}],["solid",{"_index":624,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["something",{"_index":296,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"components/ToolbarComponent.html":{}}}],["special",{"_index":1009,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":968,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.interceptor.ts",{"_index":967,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../dashboard",{"_index":956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../date",{"_index":966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.ts",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../non",{"_index":969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tickets.store.ts",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:11",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.store.ts",{"_index":118,"title":{},"body":{"injectables/AuthStore.html":{},"coverage.html":{}}}],["src/app/auth/auth.store.ts:107",{"_index":150,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:17",{"_index":159,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:18",{"_index":187,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:19",{"_index":185,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:20",{"_index":194,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:23",{"_index":189,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:24",{"_index":162,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:25",{"_index":191,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:31",{"_index":131,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:50",{"_index":142,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:61",{"_index":156,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:70",{"_index":133,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/auth.store.ts:83",{"_index":183,"title":{},"body":{"injectables/AuthStore.html":{}}}],["src/app/auth/non",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/role.directive.ts",{"_index":562,"title":{},"body":{"directives/RoleDirective.html":{},"coverage.html":{}}}],["src/app/auth/role.directive.ts:12",{"_index":568,"title":{},"body":{"directives/RoleDirective.html":{}}}],["src/app/auth/role.directive.ts:13",{"_index":570,"title":{},"body":{"directives/RoleDirective.html":{}}}],["src/app/auth/role.directive.ts:14",{"_index":567,"title":{},"body":{"directives/RoleDirective.html":{}}}],["src/app/enums/dashboard",{"_index":959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/role.enum.ts",{"_index":962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/layout/dashboard",{"_index":468,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.service.ts",{"_index":513,"title":{},"body":{"injectables/LayoutService.html":{},"coverage.html":{}}}],["src/app/layout/layout.service.ts:10",{"_index":527,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:12",{"_index":545,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:13",{"_index":529,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:14",{"_index":543,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:15",{"_index":539,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:33",{"_index":525,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:37",{"_index":524,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/layout.service.ts:39",{"_index":521,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/layout/toolbar.component.ts",{"_index":862,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/layout/toolbar.component.ts:51",{"_index":872,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/layout/toolbar.component.ts:52",{"_index":871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/layout/toolbar.component.ts:54",{"_index":870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/models/auth",{"_index":68,"title":{},"body":{"interfaces/AuthPayload.html":{},"coverage.html":{}}}],["src/app/models/ticket",{"_index":751,"title":{},"body":{"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"coverage.html":{}}}],["src/app/models/ticket.interface.ts",{"_index":610,"title":{},"body":{"interfaces/Ticket.html":{},"coverage.html":{}}}],["src/app/models/token",{"_index":858,"title":{},"body":{"interfaces/TokenDecoded.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/components/dashboard",{"_index":361,"title":{},"body":{"components/DashboardChart.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/components/ticket",{"_index":665,"title":{},"body":{"components/TicketDealsComponent.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:31",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/sign",{"_index":577,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["src/app/pages/tickets/components/ticket",{"_index":614,"title":{},"body":{"components/TicketCardComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"coverage.html":{}}}],["src/app/pages/tickets/create",{"_index":227,"title":{},"body":{"components/CreateTicketComponent.html":{},"coverage.html":{}}}],["src/app/pages/tickets/tickets.component.ts",{"_index":756,"title":{},"body":{"components/TicketsComponent.html":{},"coverage.html":{}}}],["src/app/pages/tickets/tickets.component.ts:104",{"_index":764,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:119",{"_index":769,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:70",{"_index":772,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:72",{"_index":771,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:73",{"_index":773,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:74",{"_index":775,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:75",{"_index":761,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.component.ts:87",{"_index":762,"title":{},"body":{"components/TicketsComponent.html":{}}}],["src/app/pages/tickets/tickets.store.ts",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/dashboard.service.ts",{"_index":500,"title":{},"body":{"injectables/DashboardService.html":{},"coverage.html":{}}}],["src/app/services/dashboard.service.ts:10",{"_index":509,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:16",{"_index":506,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:25",{"_index":503,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/tickets.service.ts",{"_index":811,"title":{},"body":{"injectables/TicketsService.html":{},"coverage.html":{}}}],["src/app/services/tickets.service.ts:10",{"_index":828,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/app/services/tickets.service.ts:17",{"_index":826,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/app/services/tickets.service.ts:27",{"_index":819,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/app/services/tickets.service.ts:58",{"_index":824,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/app/services/tickets.service.ts:76",{"_index":817,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/app/utils/validators/date",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.ts",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["start",{"_index":688,"title":{},"body":{"components/TicketFiltersComponent.html":{},"index.html":{}}}],["started",{"_index":977,"title":{"index.html":{}},"body":{}}],["state",{"_index":781,"title":{},"body":{"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":782,"title":{},"body":{"components/TicketsComponent.html":{}}}],["state.interface",{"_index":723,"title":{},"body":{"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{}}}],["state.interface.ts",{"_index":752,"title":{},"body":{"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"coverage.html":{}}}],["statements",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":147,"title":{},"body":{"injectables/AuthStore.html":{}}}],["storagesync",{"_index":193,"title":{},"body":{"injectables/AuthStore.html":{}}}],["store",{"_index":144,"title":{},"body":{"injectables/AuthStore.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["store.loading",{"_index":758,"title":{},"body":{"components/TicketsComponent.html":{}}}],["string",{"_index":74,"title":{},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthStore.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"interfaces/TokenDecoded.html":{}}}],["structures",{"_index":388,"title":{},"body":{"components/DashboardChart.html":{}}}],["styles",{"_index":613,"title":{},"body":{"components/TicketCardComponent.html":{},"components/TicketListComponent.html":{}}}],["subscribe((result",{"_index":558,"title":{},"body":{"injectables/LayoutService.html":{}}}],["subtitle",{"_index":645,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["successfully",{"_index":291,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["such",{"_index":1062,"title":{},"body":{"index.html":{}}}],["supports",{"_index":983,"title":{},"body":{"index.html":{}}}],["switch",{"_index":444,"title":{},"body":{"components/DashboardChart.html":{}}}],["switchmap",{"_index":337,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["switchmap((params",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap((ticket",{"_index":284,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["table",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":282,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{},"miscellaneous/variables.html":{}}}],["tap((data",{"_index":415,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["tap((response",{"_index":286,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["template",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["text",{"_index":652,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["theming",{"_index":391,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.auth.login(payload).pipe(map(response",{"_index":166,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.authstate.login(payload",{"_index":609,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.authstate.logout",{"_index":874,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.authstate.tokendecoded()?.role",{"_index":576,"title":{},"body":{"directives/RoleDirective.html":{}}}],["this.breakpointobserver.observe",{"_index":554,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.chart",{"_index":439,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.createticket",{"_index":346,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.dashboard.getaveragepricebytickettype().pipe",{"_index":449,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.dashboard.getticketsalesovertime().pipe",{"_index":458,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.data",{"_index":440,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.data.set(data",{"_index":417,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["this.decodetoken(token",{"_index":190,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.error.set('something",{"_index":420,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["this.error.set(null",{"_index":416,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["this.errormessage.set('please",{"_index":608,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.fb.group",{"_index":306,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["this.form.invalid",{"_index":344,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.form.markallastouched",{"_index":345,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.form.patchvalue",{"_index":725,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["this.form.reset",{"_index":287,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/TicketFiltersComponent.html":{}}}],["this.form.value",{"_index":347,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{}}}],["this.form.value.from_date",{"_index":348,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.form.value.to_date",{"_index":350,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.getdatabytype().pipe",{"_index":414,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.getparams(params",{"_index":832,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.hide.set(!this.hide",{"_index":605,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.http.get(path",{"_index":511,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/TicketsService.html":{}}}],["this.http.post(path",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TicketsService.html":{}}}],["this.injector",{"_index":442,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.label",{"_index":454,"title":{},"body":{"components/DashboardChart.html":{}}}],["this.load",{"_index":443,"title":{},"body":{"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["this.loading.set(false",{"_index":288,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["this.loading.set(true",{"_index":283,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["this.mode",{"_index":540,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.mode.set('desktop",{"_index":561,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.mode.set('mobile",{"_index":560,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.ngifref.ngif",{"_index":574,"title":{},"body":{"directives/RoleDirective.html":{}}}],["this.params",{"_index":726,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["this.parsedate(this.params().from_date",{"_index":727,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["this.parsedate(this.params().to_date",{"_index":728,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["this.queryparams()['_limit",{"_index":787,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['_page",{"_index":785,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['from_date",{"_index":789,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['from_price",{"_index":793,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['inbound",{"_index":791,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['outbound",{"_index":792,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['to_date",{"_index":790,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.queryparams()['to_price",{"_index":794,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.role",{"_index":575,"title":{},"body":{"directives/RoleDirective.html":{}}}],["this.router.navigate",{"_index":795,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.router.navigatebyurl('/dashboard",{"_index":169,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.router.navigatebyurl('/sign",{"_index":215,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.search.emit(this.form.value",{"_index":733,"title":{},"body":{"components/TicketFiltersComponent.html":{}}}],["this.settoken(null",{"_index":225,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.settoken(response.token",{"_index":167,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.settoken(token",{"_index":213,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.sidenavopened.set(!this.sidenavopened",{"_index":548,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.sidenavopened.set(value",{"_index":549,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.snackbar.open('an",{"_index":178,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.snackbar.open('ticket",{"_index":289,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.snackbar.open('wrong",{"_index":174,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.snackbar.open(e.error.error",{"_index":295,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.snackbar.open(state.error",{"_index":783,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.store.load",{"_index":784,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.store.load(event",{"_index":810,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.store.load({page",{"_index":803,"title":{},"body":{"components/TicketsComponent.html":{}}}],["this.tickets.createticket(ticket).pipe",{"_index":285,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["this.tickets.getticketdeals().pipe",{"_index":673,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["this.token",{"_index":161,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.token.set(token",{"_index":218,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.tokenstorage",{"_index":217,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.tokenstorage.set(null",{"_index":226,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.tokenstorage.set(response.token",{"_index":168,"title":{},"body":{"injectables/AuthStore.html":{}}}],["this.type",{"_index":445,"title":{},"body":{"components/DashboardChart.html":{}}}],["throwerror",{"_index":181,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{}}}],["ticket",{"_index":47,"title":{"interfaces/Ticket.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["ticket'},{'name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["ticket().from_date",{"_index":660,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().inbound",{"_index":655,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().outbound",{"_index":656,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().price",{"_index":662,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().seat_number",{"_index":658,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().ticket_type",{"_index":657,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().ticket_type_id",{"_index":663,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket().to_date",{"_index":661,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["ticket.component.ts",{"_index":228,"title":{},"body":{"components/CreateTicketComponent.html":{},"coverage.html":{}}}],["ticket.component.ts:146",{"_index":305,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:147",{"_index":320,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:148",{"_index":318,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:150",{"_index":317,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:151",{"_index":324,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:153",{"_index":315,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:166",{"_index":277,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.component.ts:182",{"_index":300,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["ticket.id",{"_index":668,"title":{},"body":{"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{}}}],["ticket.interface",{"_index":753,"title":{},"body":{"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{}}}],["ticket_sales",{"_index":961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ticket_type",{"_index":308,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"index.html":{}}}],["ticket_type_id",{"_index":612,"title":{},"body":{"interfaces/Ticket.html":{},"index.html":{}}}],["ticketcardcomponent",{"_index":46,"title":{"components/TicketCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["ticketdealscomponent",{"_index":49,"title":{"components/TicketDealsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["ticketfilterscomponent",{"_index":51,"title":{"components/TicketFiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["ticketlistcomponent",{"_index":53,"title":{"components/TicketListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["ticketlistparams",{"_index":721,"title":{"interfaces/TicketListParams.html":{}},"body":{"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"coverage.html":{}}}],["ticketliststate",{"_index":754,"title":{"interfaces/TicketListState.html":{}},"body":{"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketliststore",{"_index":757,"title":{},"body":{"components/TicketsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tickets",{"_index":275,"title":{},"body":{"components/CreateTicketComponent.html":{},"injectables/LayoutService.html":{},"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tickets'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["tickets.store",{"_index":778,"title":{},"body":{"components/TicketsComponent.html":{}}}],["tickets/components/ticket",{"_index":677,"title":{},"body":{"components/TicketDealsComponent.html":{}}}],["ticketscomponent",{"_index":55,"title":{"components/TicketsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["ticketsservice",{"_index":303,"title":{"injectables/TicketsService.html":{}},"body":{"components/CreateTicketComponent.html":{},"components/TicketDealsComponent.html":{},"injectables/TicketsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketsservice.gettickets(newparams).pipe",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tickettypes",{"_index":255,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["time",{"_index":508,"title":{},"body":{"injectables/DashboardService.html":{},"index.html":{}}}],["title",{"_index":530,"title":{},"body":{"injectables/LayoutService.html":{},"components/TicketCardComponent.html":{}}}],["to_date",{"_index":311,"title":{},"body":{"components/CreateTicketComponent.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["to_price",{"_index":714,"title":{},"body":{"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["toggles",{"_index":592,"title":{},"body":{"components/SignInComponent.html":{}}}],["togglesidenav",{"_index":520,"title":{},"body":{"injectables/LayoutService.html":{}}}],["token",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"miscellaneous/variables.html":{}}}],["tokendecoded",{"_index":123,"title":{"interfaces/TokenDecoded.html":{}},"body":{"injectables/AuthStore.html":{},"interfaces/TokenDecoded.html":{},"coverage.html":{}}}],["tokenstorage",{"_index":124,"title":{},"body":{"injectables/AuthStore.html":{}}}],["toolbar",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component",{"_index":495,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["toolbarcomponent",{"_index":57,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":651,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["total",{"_index":742,"title":{},"body":{"components/TicketListComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":256,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketListComponent.html":{}}}],["tracker",{"_index":532,"title":{},"body":{"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["tracker.git",{"_index":1036,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":982,"title":{},"body":{"index.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["triggered",{"_index":595,"title":{},"body":{"components/SignInComponent.html":{}}}],["true",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":219,"title":{},"body":{"injectables/AuthStore.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["tslib",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":984,"title":{},"body":{"index.html":{}}}],["type",{"_index":75,"title":{},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"interfaces/Ticket.html":{},"components/TicketFiltersComponent.html":{},"interfaces/TicketListParams.html":{},"interfaces/TicketListState.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"interfaces/TokenDecoded.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":435,"title":{},"body":{"components/DashboardChart.html":{},"components/DashboardComponent.html":{}}}],["type.enum.ts",{"_index":957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uml",{"_index":1050,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":706,"title":{},"body":{"components/TicketFiltersComponent.html":{},"injectables/TicketsService.html":{}}}],["use",{"_index":386,"title":{},"body":{"components/DashboardChart.html":{}}}],["usefactory",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["username",{"_index":73,"title":{},"body":{"interfaces/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/SignInComponent.html":{},"interfaces/TokenDecoded.html":{}}}],["users",{"_index":986,"title":{},"body":{"index.html":{}}}],["using",{"_index":302,"title":{},"body":{"components/CreateTicketComponent.html":{},"index.html":{}}}],["utils/validators/date",{"_index":339,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["uuid",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["v0.17.0",{"_index":1028,"title":{},"body":{"index.html":{}}}],["v10",{"_index":1023,"title":{},"body":{"index.html":{}}}],["v18.1.1",{"_index":1025,"title":{},"body":{"index.html":{}}}],["v20",{"_index":1021,"title":{},"body":{"index.html":{}}}],["valid",{"_index":280,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["validation",{"_index":1004,"title":{},"body":{"index.html":{}}}],["validator",{"_index":341,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["validator.ts",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatorfn",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":313,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{}}}],["validators.min(1",{"_index":309,"title":{},"body":{"components/CreateTicketComponent.html":{}}}],["validators.required",{"_index":307,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/SignInComponent.html":{}}}],["value",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/DashboardService.html":{},"injectables/LayoutService.html":{},"directives/RoleDirective.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"injectables/TicketsService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":702,"title":{},"body":{"components/TicketFiltersComponent.html":{},"index.html":{}}}],["var",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/DashboardComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/SignInComponent.html":{},"components/TicketCardComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketListComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1068,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1066,"title":{},"body":{"properties.html":{}}}],["view",{"_index":987,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":426,"title":{},"body":{"components/DashboardChart.html":{},"components/DashboardComponent.html":{}}}],["viewchild(basechartdirective",{"_index":401,"title":{},"body":{"components/DashboardChart.html":{}}}],["visibility",{"_index":586,"title":{},"body":{"components/SignInComponent.html":{}}}],["visibility_off",{"_index":585,"title":{},"body":{"components/SignInComponent.html":{}}}],["visualization",{"_index":1010,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1061,"title":{},"body":{"index.html":{}}}],["void",{"_index":149,"title":{},"body":{"injectables/AuthStore.html":{},"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"injectables/LayoutService.html":{},"components/SignInComponent.html":{},"components/TicketDealsComponent.html":{},"components/TicketFiltersComponent.html":{},"components/TicketsComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":642,"title":{},"body":{"components/TicketCardComponent.html":{}}}],["welcome",{"_index":581,"title":{},"body":{"components/SignInComponent.html":{}}}],["went",{"_index":297,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["width",{"_index":556,"title":{},"body":{"injectables/LayoutService.html":{}}}],["window",{"_index":1012,"title":{},"body":{"index.html":{}}}],["withmethods((store",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":996,"title":{},"body":{"index.html":{}}}],["withstate(initialstate",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrong",{"_index":298,"title":{},"body":{"components/CreateTicketComponent.html":{},"components/DashboardChart.html":{},"components/TicketDealsComponent.html":{}}}],["x",{"_index":393,"title":{},"body":{"components/DashboardChart.html":{}}}],["y",{"_index":394,"title":{},"body":{"components/DashboardChart.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  template: '',\n})\nexport class AppComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthPayload.html":{"url":"interfaces/AuthPayload.html","title":"interface - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthPayload {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(payload: AuthPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Logs in the user with the provided credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            AuthPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe authentication payload containing username and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the authentication token.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { AuthPayload } from '../models/auth-payload.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  http = inject(HttpClient);\n\n  /**\n   * Logs in the user with the provided credentials.\n   * @param {AuthPayload} payload - The authentication payload containing username and password.\n   * @returns {Observable} An observable containing the authentication token.\n   */\n  login(payload: AuthPayload): Observable {\n    const path = `${ environment.apiUrl }/login`\n    return this.http.post(path, payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStore.html":{"url":"injectables/AuthStore.html","title":"injectable - AuthStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.store.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                router\n                            \n                            \n                                snackBar\n                            \n                            \n                                token\n                            \n                            \n                                tokenDecoded\n                            \n                            \n                                tokenStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decodeToken\n                            \n                            \n                                init\n                            \n                            \n                                logout\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.store.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.store.ts:70\n                        \n                    \n\n\n            \n                \n                        Decodes the JWT token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT token to decode.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TokenDecoded | null\n\n                        \n                            \n                                The decoded token object or null if decoding fails.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.store.ts:50\n                        \n                    \n\n\n            \n                \n                        Initializes the store by setting the token from local storage if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.store.ts:107\n                        \n                    \n\n\n            \n                \n                        Logs out the user by clearing the token and navigating to the sign-in page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.store.ts:61\n                        \n                    \n\n\n            \n                \n                        Sets the authentication token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe authentication token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => !!this.token())\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    pipe(\n      concatMap(payload =>\n        this.auth.login(payload).pipe(map(response => {\n            this.setToken(response.token);\n            this.tokenStorage.set(response.token);\n            this.router.navigateByUrl('/dashboard');\n            return response;\n          }), catchError(err => {\n            if(err.status === 401) {\n              this.snackBar.open('Wrong credentials', 'Dismiss', { duration: 5000 });\n            } else {\n              this.snackBar.open('An error occurred', 'Dismiss', { duration: 5000 });\n            }\n            return throwError(() => err);\n          })\n        )\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:83\n                        \n                    \n\n            \n                \n                    Logs in the user with the provided credentials.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    payload\n                                                    \n                                                            \nThe authentication payload containing username and password.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenDecoded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const token = this.token();\n    if (!token) {\n      return null;\n    }\n    return this.decodeToken(token);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectLocalStorage('token', {\n    storageSync: true\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.store.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { jwtDecode } from 'jwt-decode';\nimport { TokenDecoded } from '../models/token-decoded.interface';\nimport { AuthService } from './auth.service';\nimport { AuthPayload } from '../models/auth-payload.interface';\nimport { createEffect } from 'ngxtension/create-effect';\nimport { catchError, concatMap, map, pipe, throwError } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { injectLocalStorage } from 'ngxtension/inject-local-storage';\nimport { explicitEffect } from 'ngxtension/explicit-effect';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStore {\n  auth = inject(AuthService);\n  snackBar = inject(MatSnackBar);\n  router = inject(Router);\n  tokenStorage = injectLocalStorage('token', {\n    storageSync: true\n  });\n  token = signal(null);\n  isAuthenticated = computed(() => !!this.token());\n  tokenDecoded = computed(() => {\n    const token = this.token();\n    if (!token) {\n      return null;\n    }\n    return this.decodeToken(token);\n  });\n\n  constructor() {\n    explicitEffect([this.tokenStorage], ([token]) => {\n      this.setToken(token ?? null);\n      if(token) {\n        this.router.navigateByUrl('/dashboard');\n      } else {\n        this.router.navigateByUrl('/sign-in');\n      }\n    }, {\n      defer: true\n    });\n  }\n\n\n  /**\n   * Initializes the store by setting the token from local storage if available.\n   */\n  init() {\n    const token = this.tokenStorage();\n    if (token) {\n      this.setToken(token);\n    }\n  }\n\n  /**\n   * Sets the authentication token.\n   * @param {string | null} token - The authentication token.\n   */\n  setToken(token: string | null) {\n    this.token.set(token);\n  }\n\n  /**\n   * Decodes the JWT token.\n   * @param {string} token - The JWT token to decode.\n   * @returns {TokenDecoded | null} The decoded token object or null if decoding fails.\n   */\n  public decodeToken(token: string): TokenDecoded | null {\n    try {\n      return jwtDecode(token);\n    } catch (Error) {\n      return null;\n    }\n  }\n\n  /**\n   * Logs in the user with the provided credentials.\n   * @param {AuthPayload} payload - The authentication payload containing username and password.\n   * @returns {Observable} An observable that completes when the login process is finished.\n   */\n  login = createEffect(\n    pipe(\n      concatMap(payload =>\n        this.auth.login(payload).pipe(map(response => {\n            this.setToken(response.token);\n            this.tokenStorage.set(response.token);\n            this.router.navigateByUrl('/dashboard');\n            return response;\n          }), catchError(err => {\n            if(err.status === 401) {\n              this.snackBar.open('Wrong credentials', 'Dismiss', { duration: 5000 });\n            } else {\n              this.snackBar.open('An error occurred', 'Dismiss', { duration: 5000 });\n            }\n            return throwError(() => err);\n          })\n        )\n      ),\n    ),\n  );\n\n  /**\n   * Logs out the user by clearing the token and navigating to the sign-in page.\n   */\n  logout() {\n    this.setToken(null);\n    this.tokenStorage.set(null);\n    this.router.navigateByUrl('/sign-in');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTicketComponent.html":{"url":"components/CreateTicketComponent.html","title":"component - CreateTicketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateTicketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tickets/create-ticket.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-ticket\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                                RoleDirective\n                            RouterLink\n                            MatCard\n                            MatCardContent\n                            MatFormField\n                            ReactiveFormsModule\n                            MatInput\n                            MatSelect\n                            MatOption\n                            MatDatepickerInput\n                            MatDatepickerToggle\n                            MatDatepicker\n                            MatError\n                            MatLabel\n                            MatSuffix\n                            JsonPipe\n                \n            \n\n\n\n            \n                template\n                \n  Create Ticket\n  \n    Cancel\n    Save\n  \n\n\n  \n    \n      \n        Inbound\n        \n        @if (form.get('inbound')?.hasError('required')) {\n          \n            Inbound city is required\n          \n        }\n      \n\n      \n        Outbound\n        \n        @if (form.get('outbound')?.hasError('required')) {\n          \n            Outbound city is required\n          \n        }\n      \n\n      \n        Ticket Type\n        \n          @for (type of ticketTypes(); track $index) {\n            {{ type }}\n          }\n        \n        @if (form.get('ticket_type')?.hasError('required')) {\n          \n            Ticket type is required\n          \n        }\n      \n\n      \n        Price\n        \n        @if (form.get('price')?.hasError('required')) {\n          \n            Price is required\n          \n        }\n        @if (form.get('price')?.hasError('min')) {\n          \n            Price must be greater than 0\n          \n        }\n      \n\n      \n        From Date\n        \n        \n        \n        @if (form.get('from_date')?.hasError('required')) {\n          \n            From date is required\n          \n        }\n      \n\n      \n        To Date\n        \n        \n        \n        @if (form.get('to_date')?.hasError('required')) {\n          \n            To date is required\n          \n        }\n      \n      @if (form.hasError('dateRangeInvalid')) {\n        \n          From date must be earlier than to date.\n        \n      }\n      \n        Seat Number\n        \n        @if (form.get('seat_number')?.hasError('required')) {\n          \n            Seat number is required\n          \n        }\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTicket\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                snackBar\n                            \n                            \n                                tickets\n                            \n                            \n                                ticketTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/create-ticket.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Saves the new ticket if the form is valid.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTicket\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(pipe(\n      tap(() => this.loading.set(true)),\n      switchMap((ticket: Ticket) =>\n        this.tickets.createTicket(ticket).pipe(\n          tap((response) => {\n            this.form.reset();\n            this.loading.set(false);\n            this.snackBar.open('Ticket created successfully', 'Close');\n          }),\n          catchError((e) => {\n              console.log(e);\n              this.loading.set(false);\n              this.snackBar.open(e.error.error ?? 'Something went wrong', 'Close');\n              return throwError(() => e);\n            }\n          )\n        ),\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:182\n                        \n                    \n\n            \n                \n                    Creates a new ticket using the TicketsService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    inbound: [ '', Validators.required ],\n    outbound: [ '', Validators.required ],\n    ticket_type: [ '', Validators.required ],\n    price: [ 0, [ Validators.required, Validators.min(1) ] ],\n    from_date: [ '', Validators.required ],\n    to_date: [ '', Validators.required ],\n    seat_number: [ '', Validators.required ]\n  }, { validators: dateRangeValidator() })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:150\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tickets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TicketsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([ 'Economy', 'Business', 'First Class' ])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/create-ticket.component.ts:151\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { RoleDirective } from '../../auth/role.directive';\nimport { RouterLink } from '@angular/router';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatError, MatFormField, MatLabel, MatSuffix } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption, MatSelect } from '@angular/material/select';\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle } from '@angular/material/datepicker';\nimport { TicketsService } from '../../services/tickets.service';\nimport { createEffect } from 'ngxtension/create-effect';\nimport { catchError, pipe, switchMap, tap, throwError } from 'rxjs';\nimport { Ticket } from '../../models/ticket.interface';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { dateRangeValidator } from '../../utils/validators/date-range-validator';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-create-ticket',\n  template: `\n    \n      Create Ticket\n      \n        Cancel\n        Save\n      \n    \n    \n      \n        \n          \n            Inbound\n            \n            @if (form.get('inbound')?.hasError('required')) {\n              \n                Inbound city is required\n              \n            }\n          \n\n          \n            Outbound\n            \n            @if (form.get('outbound')?.hasError('required')) {\n              \n                Outbound city is required\n              \n            }\n          \n\n          \n            Ticket Type\n            \n              @for (type of ticketTypes(); track $index) {\n                {{ type }}\n              }\n            \n            @if (form.get('ticket_type')?.hasError('required')) {\n              \n                Ticket type is required\n              \n            }\n          \n\n          \n            Price\n            \n            @if (form.get('price')?.hasError('required')) {\n              \n                Price is required\n              \n            }\n            @if (form.get('price')?.hasError('min')) {\n              \n                Price must be greater than 0\n              \n            }\n          \n\n          \n            From Date\n            \n            \n            \n            @if (form.get('from_date')?.hasError('required')) {\n              \n                From date is required\n              \n            }\n          \n\n          \n            To Date\n            \n            \n            \n            @if (form.get('to_date')?.hasError('required')) {\n              \n                To date is required\n              \n            }\n          \n          @if (form.hasError('dateRangeInvalid')) {\n            \n              From date must be earlier than to date.\n            \n          }\n          \n            Seat Number\n            \n            @if (form.get('seat_number')?.hasError('required')) {\n              \n                Seat number is required\n              \n            }\n          \n        \n      \n    \n  `,\n  standalone: true,\n  imports: [\n    MatButton,\n    RoleDirective,\n    RouterLink,\n    MatCard,\n    MatCardContent,\n    MatFormField,\n    ReactiveFormsModule,\n    MatInput,\n    MatSelect,\n    MatOption,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepicker,\n    MatError,\n    MatLabel,\n    MatSuffix,\n    JsonPipe\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class CreateTicketComponent {\n  fb = inject(FormBuilder);\n  tickets = inject(TicketsService);\n  snackBar = inject(MatSnackBar);\n\n  loading = signal(false);\n  ticketTypes = signal([ 'Economy', 'Business', 'First Class' ]);\n\n  form = this.fb.group({\n    inbound: [ '', Validators.required ],\n    outbound: [ '', Validators.required ],\n    ticket_type: [ '', Validators.required ],\n    price: [ 0, [ Validators.required, Validators.min(1) ] ],\n    from_date: [ '', Validators.required ],\n    to_date: [ '', Validators.required ],\n    seat_number: [ '', Validators.required ]\n  }, { validators: dateRangeValidator() });\n\n  /**\n   * Saves the new ticket if the form is valid.\n   */\n  onSave() {\n    console.log(this.form.value);\n    if (this.form.invalid) {\n      this.form.markAllAsTouched()\n      return;\n    }\n    this.createTicket({\n      ...this.form.value,\n      from_date: this.form.value.from_date ? new Date(this.form.value.from_date).toLocaleDateString() : null,\n      to_date: this.form.value.to_date ? new Date(this.form.value.to_date).toLocaleDateString() : null,\n    } as Ticket);\n  }\n\n  /**\n   * Creates a new ticket using the TicketsService.\n   */\n  createTicket = createEffect(pipe(\n      tap(() => this.loading.set(true)),\n      switchMap((ticket: Ticket) =>\n        this.tickets.createTicket(ticket).pipe(\n          tap((response) => {\n            this.form.reset();\n            this.loading.set(false);\n            this.snackBar.open('Ticket created successfully', 'Close');\n          }),\n          catchError((e) => {\n              console.log(e);\n              this.loading.set(false);\n              this.snackBar.open(e.error.error ?? 'Something went wrong', 'Close');\n              return throwError(() => e);\n            }\n          )\n        ),\n      )\n    )\n  )\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Ticket      Cancel    Save                      Inbound                @if (form.get(\\'inbound\\')?.hasError(\\'required\\')) {                      Inbound city is required                  }                    Outbound                @if (form.get(\\'outbound\\')?.hasError(\\'required\\')) {                      Outbound city is required                  }                    Ticket Type                  @for (type of ticketTypes(); track $index) {            {{ type }}          }                @if (form.get(\\'ticket_type\\')?.hasError(\\'required\\')) {                      Ticket type is required                  }                    Price                @if (form.get(\\'price\\')?.hasError(\\'required\\')) {                      Price is required                  }        @if (form.get(\\'price\\')?.hasError(\\'min\\')) {                      Price must be greater than 0                  }                    From Date                                @if (form.get(\\'from_date\\')?.hasError(\\'required\\')) {                      From date is required                  }                    To Date                                @if (form.get(\\'to_date\\')?.hasError(\\'required\\')) {                      To date is required                  }            @if (form.hasError(\\'dateRangeInvalid\\')) {                  From date must be earlier than to date.              }              Seat Number                @if (form.get(\\'seat_number\\')?.hasError(\\'required\\')) {                      Seat number is required                  }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateTicketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardChart.html":{"url":"components/DashboardChart.html","title":"component - DashboardChart","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/components/dashboard-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-chart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            BaseChartDirective\n                            MatCard\n                            MatCardContent\n                            MatCardHeader\n                            MatCardTitle\n                            MatButton\n                            MatProgressBar\n                \n            \n\n\n\n            \n                template\n                \n  \n    {{ label() }}\n  \n  \n    \n      @if (loading()) {\n        \n      }\n    \n    \n    \n    @if (error()) {\n      {{ error() }}\n      Retry\n    }\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartOptions\n                            \n                            \n                                barChartType\n                            \n                            \n                                chart\n                            \n                            \n                                dashboard\n                            \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                injector\n                            \n                            \n                                label\n                            \n                            \n                                load\n                            \n                            \n                                loading\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataByType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:102\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataByType\n                        \n                    \n                \n            \n            \n                \ngetDataByType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Fetches the data based on the type of chart.\n\n\n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                An observable containing the chart data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: {\n      x: {},\n      y: {\n        min: 10,\n      },\n    },\n    plugins: {\n      legend: {\n        display: true,\n      },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barChartType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'bar' as const\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(BaseChartDirective)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DashboardService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal>({ labels: [], datasets: [] })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(pipe(\n      switchMap(() => {\n          this.loading.set(true);\n          console.log('here');\n          return this.getDataByType().pipe(\n            tap((data) => {\n              this.loading.set(false);\n              this.error.set(null);\n              this.data.set(data as ChartData);\n            }),\n            catchError((error) => {\n              this.loading.set(false);\n              this.error.set('Something went wrong. Please try again.');\n              return of({});\n            })\n          )\n        }\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:83\n                        \n                    \n\n            \n                \n                    Loads the chart data based on the chart type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/dashboard-chart.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, inject, Injector, input, OnInit, signal, viewChild } from '@angular/core';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { DashboardService } from '../../../services/dashboard.service';\nimport { ChartConfiguration, ChartData } from 'chart.js';\nimport { MatCard, MatCardContent, MatCardHeader, MatCardTitle } from '@angular/material/card';\nimport { createEffect } from 'ngxtension/create-effect';\nimport { catchError, map, Observable, of, pipe, switchMap, tap } from 'rxjs';\nimport { DashboardChartTypeEnum } from '../../../enums/dashboard-chart-type.enum';\nimport { MatButton } from '@angular/material/button';\nimport { MatProgressBar } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'app-dashboard-chart',\n  template: `\n    \n      \n        {{ label() }}\n      \n      \n        \n          @if (loading()) {\n            \n          }\n        \n        \n        \n        @if (error()) {\n          {{ error() }}\n          Retry\n        }\n      \n    \n\n  `,\n  imports: [\n    BaseChartDirective,\n    MatCard,\n    MatCardContent,\n    MatCardHeader,\n    MatCardTitle,\n    MatButton,\n    MatProgressBar\n  ],\n  standalone: true\n})\n\nexport class DashboardChart implements OnInit {\n  chart = viewChild(BaseChartDirective);\n  dashboard = inject(DashboardService);\n  injector = inject(Injector);\n\n  loading = signal(false);\n  error = signal(null);\n  data = signal>({ labels: [], datasets: [] });\n\n  label = input('');\n  type = input.required();\n\n  barChartOptions: ChartConfiguration['options'] = {\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: {\n      x: {},\n      y: {\n        min: 10,\n      },\n    },\n    plugins: {\n      legend: {\n        display: true,\n      },\n    },\n  };\n\n  barChartType = 'bar' as const;\n\n  /**\n   * Loads the chart data based on the chart type.\n   */\n  load = createEffect(pipe(\n      switchMap(() => {\n          this.loading.set(true);\n          console.log('here');\n          return this.getDataByType().pipe(\n            tap((data) => {\n              this.loading.set(false);\n              this.error.set(null);\n              this.data.set(data as ChartData);\n            }),\n            catchError((error) => {\n              this.loading.set(false);\n              this.error.set('Something went wrong. Please try again.');\n              return of({});\n            })\n          )\n        }\n      ),\n    ),\n  )\n\n  constructor() {\n    effect(() => {\n      const chart = this.chart();\n      if (chart && this.data()) {\n        chart.update();\n      }\n    }, {\n      injector: this.injector\n    });\n  }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  /**\n   * Fetches the data based on the type of chart.\n   * @returns {Observable>} An observable containing the chart data.\n   */\n  getDataByType(): Observable> {\n    switch (this.type()) {\n      case DashboardChartTypeEnum.AVERAGE_PRICE:\n        console.log('average price');\n        return this.dashboard.getAveragePriceByTicketType().pipe(\n          map((data) => ({\n              labels: Object.keys(data),\n              datasets: [\n                { data: Object.keys(data).map((key) => data[key]), label: this.label() },\n              ],\n            }) as ChartData,\n          ))\n      case DashboardChartTypeEnum.TICKET_SALES:\n        console.log('ticket sales');\n        return this.dashboard.getTicketSalesOverTime().pipe(\n          map((data) => ({\n              labels: Object.keys(data),\n              datasets: [\n                { data: Object.keys(data).map((key) => data[key]), label: this.label() },\n              ],\n            }) as ChartData,\n          ))\n      default:\n        return of({\n          labels: [],\n          datasets: [],\n        })\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ label() }}              @if (loading()) {              }                @if (error()) {      {{ error() }}      Retry    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DashboardChart\n                                TicketDealsComponent\n                \n            \n\n\n\n            \n                template\n                \n  Dashboard\n\n\n  \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                DashboardChartTypeEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DashboardChartTypeEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DashboardChartTypeEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, viewChild } from '@angular/core';\nimport { DashboardChart } from './components/dashboard-chart.component';\nimport { DashboardChartTypeEnum } from '../../enums/dashboard-chart-type.enum';\nimport { TicketDealsComponent } from './components/ticket-deals.component';\n\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    \n      Dashboard\n    \n    \n      \n      \n    \n    \n      \n    \n  `,\n  standalone: true,\n  imports: [\n    DashboardChart,\n    TicketDealsComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class DashboardComponent {\n  protected readonly DashboardChartTypeEnum = DashboardChartTypeEnum;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardLayoutComponent.html":{"url":"components/DashboardLayoutComponent.html","title":"component - DashboardLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/dashboard-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-layout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbar\n                            MatIcon\n                            MatIconButton\n                            MatDrawerContainer\n                            MatDrawerContent\n                            MatDrawer\n                            RouterOutlet\n                                ToolbarComponent\n                            MatList\n                            MatListItem\n                            MatDivider\n                            MatListSubheaderCssMatStyler\n                            RouterLink\n                            MatListItemIcon\n                            MatListItemTitle\n                            RouterLinkActive\n                \n            \n\n\n\n            \n                template\n                \n\n  \n    \n      \n        @for (section of layout.sidenavContent(); track section) {\n          {{ section.title }}\n          @for (element of section.children; track element) {\n            \n              \n                {{ element.icon }}\n                {{ element.title }}\n              \n            \n          }\n          \n        }\n      \n    \n  \n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        layout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LayoutService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/dashboard-layout.component.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatDrawer, MatDrawerContainer, MatDrawerContent } from '@angular/material/sidenav';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { ToolbarComponent } from './toolbar.component';\nimport { LayoutService } from './layout.service';\nimport {\n  MatList,\n  MatListItem,\n  MatListItemIcon,\n  MatListItemTitle,\n  MatListSubheaderCssMatStyler\n} from '@angular/material/list';\nimport { MatDivider } from '@angular/material/divider';\n\n@Component({\n  selector: 'app-dashboard-layout',\n  template: `\n    \n    \n      \n        \n          \n            @for (section of layout.sidenavContent(); track section) {\n              {{ section.title }}\n              @for (element of section.children; track element) {\n                \n                  \n                    {{ element.icon }}\n                    {{ element.title }}\n                  \n                \n              }\n              \n            }\n          \n        \n      \n      \n        \n          \n        \n      \n    \n  `,\n  standalone: true,\n  imports: [\n    MatToolbar,\n    MatIcon,\n    MatIconButton,\n    MatDrawerContainer,\n    MatDrawerContent,\n    MatDrawer,\n    RouterOutlet,\n    ToolbarComponent,\n    MatList,\n    MatListItem,\n    MatDivider,\n    MatListSubheaderCssMatStyler,\n    RouterLink,\n    MatListItemIcon,\n    MatListItemTitle,\n    RouterLinkActive\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class DashboardLayoutComponent {\n  layout = inject(LayoutService);\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @for (section of layout.sidenavContent(); track section) {          {{ section.title }}          @for (element of section.children; track element) {                                          {{ element.icon }}                {{ element.title }}                                    }                  }                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dashboard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAveragePriceByTicketType\n                            \n                            \n                                getTicketSalesOverTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAveragePriceByTicketType\n                        \n                    \n                \n            \n            \n                \ngetAveragePriceByTicketType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Gets average ticket price by ticket type.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing average ticket price by type.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTicketSalesOverTime\n                        \n                    \n                \n            \n            \n                \ngetTicketSalesOverTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Gets ticket sales data over time.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing ticket sales data over time.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dashboard.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  http = inject(HttpClient);\n\n  /**\n   * Gets ticket sales data over time.\n   * @returns {Observable} An observable containing ticket sales data over time.\n   */\n  getTicketSalesOverTime(): Observable {\n    const path = `${environment.apiUrl}/dashboard/ticket-sales-over-time`;\n    return this.http.get(path);\n  }\n\n  /**\n   * Gets average ticket price by ticket type.\n   * @returns {Observable} An observable containing average ticket price by type.\n   */\n  getAveragePriceByTicketType(): Observable {\n    const path = `${environment.apiUrl}/dashboard/average-price-by-ticket-type`;\n    return this.http.get(path);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/layout.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpointObserver\n                            \n                            \n                                mode\n                            \n                            \n                                sidenavContent\n                            \n                            \n                                sidenavMode\n                            \n                            \n                                sideNavOpened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSidenav\n                            \n                            \n                                toggleSideNav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.service.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSidenav\n                        \n                    \n                \n            \n            \n                \nsetSidenav(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layout/layout.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideNav\n                        \n                    \n                \n            \n            \n                \ntoggleSideNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layout/layout.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        breakpointObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BreakpointObserver)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('desktop')\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidenavContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([\n    {\n      title: 'Flight Tracker',\n      children: [\n        {\n          title: 'Dashboard',\n          icon: 'home',\n          link: '/dashboard'\n        },\n        {\n          title: 'Tickets',\n          icon: 'airplane_ticket',\n          link: '/dashboard/tickets'\n        }\n      ]\n    }\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidenavMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.mode() === 'mobile' ? 'over' : 'side')\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sideNavOpened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n\n  breakpointObserver = inject(BreakpointObserver);\n\n  sideNavOpened = signal(true);\n  mode = signal('desktop');\n  sidenavMode = computed(() => this.mode() === 'mobile' ? 'over' : 'side');\n  sidenavContent = signal([\n    {\n      title: 'Flight Tracker',\n      children: [\n        {\n          title: 'Dashboard',\n          icon: 'home',\n          link: '/dashboard'\n        },\n        {\n          title: 'Tickets',\n          icon: 'airplane_ticket',\n          link: '/dashboard/tickets'\n        }\n      ]\n    }\n  ])\n\n  toggleSideNav() {\n    this.sideNavOpened.set(!this.sideNavOpened());\n  }\n\n  setSidenav(value: boolean) {\n    this.sideNavOpened.set(value);\n  }\n\n  constructor() {\n    // detect screen size changes\n    this.breakpointObserver.observe([\n      '(max-width: 768px)'\n    ]).subscribe((result: BreakpointState) => {\n      if (result.matches) {\n        this.mode.set('mobile');\n      } else {\n        this.mode.set('desktop');\n      }\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RoleDirective.html":{"url":"directives/RoleDirective.html","title":"directive - RoleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RoleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/role.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [role]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n                    \n                        HostDirectives\n                        \n                                    NgIf\n\n                        \n                    \n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authState\n                            \n                            \n                                ngIfRef\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/role.directive.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/role.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/role.directive.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngIfRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgIf)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/role.directive.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/auth/role.directive.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, effect, inject, input } from '@angular/core';\nimport { NgIf } from '@angular/common';\nimport { AuthStore } from './auth.store';\nimport { Role } from '../enums/role.enum';\n\n@Directive({\n  selector: '[role]',\n  standalone: true,\n  hostDirectives: [ NgIf ],\n})\nexport class RoleDirective {\n  role = input.required();\n  authState = inject(AuthStore);\n  ngIfRef = inject(NgIf)\n\n  constructor() {\n    effect(() => {\n      this.ngIfRef.ngIf = this.role() === this.authState.tokenDecoded()?.role;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/sign-in/sign-in.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardHeader\n                            MatCardSubtitle\n                            MatCardTitle\n                            MatCardContent\n                            MatFormField\n                            MatInput\n                            MatIconButton\n                            MatIcon\n                            MatLabel\n                            MatError\n                            MatButton\n                            ReactiveFormsModule\n                            MatSuffix\n                \n            \n\n\n\n            \n                template\n                \n  Welcome to Flight Tracker\n  \n    \n      Sign in\n      Enter credentials to continue\n    \n    \n      \n        \n          Enter your username\n          \n        \n        \n          Enter your password\n          \n          \n            {{ hide() ? 'visibility_off' : 'visibility' }}\n          \n        \n        Sign in\n      \n    \n    @if (errorMessage()) {\n      {{ errorMessage() }}\n    }\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authState\n                            \n                            \n                                errorMessage\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickEvent\n                        \n                    \n                \n            \n            \n                \nclickEvent(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-in/sign-in.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe mouse event triggered by clicking the visibility button.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-in/sign-in.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Logs in the user with the provided credentials.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: [ '', [ Validators.required ] ],\n    password: [ '', [ Validators.required ] ]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-in/sign-in.component.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { MatCard, MatCardContent, MatCardHeader, MatCardSubtitle, MatCardTitle } from '@angular/material/card';\nimport { MatError, MatFormField, MatLabel, MatSuffix } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthStore } from '../../auth/auth.store';\nimport { AuthPayload } from '../../models/auth-payload.interface';\n\n@Component({\n  selector: 'app-sign-in',\n  template: `\n    \n      Welcome to Flight Tracker\n      \n        \n          Sign in\n          Enter credentials to continue\n        \n        \n          \n            \n              Enter your username\n              \n            \n            \n              Enter your password\n              \n              \n                {{ hide() ? 'visibility_off' : 'visibility' }}\n              \n            \n            Sign in\n          \n        \n        @if (errorMessage()) {\n          {{ errorMessage() }}\n        }\n      \n    \n  `,\n  standalone: true,\n  imports: [\n    MatCard,\n    MatCardHeader,\n    MatCardSubtitle,\n    MatCardTitle,\n    MatCardContent,\n    MatFormField,\n    MatInput,\n    MatIconButton,\n    MatIcon,\n    MatLabel,\n    MatError,\n    MatButton,\n    ReactiveFormsModule,\n    MatSuffix\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class SignInComponent {\n  fb = inject(FormBuilder);\n  authState = inject(AuthStore);\n\n  hide = signal(true);\n  errorMessage = signal(null);\n  form = this.fb.group({\n    username: [ '', [ Validators.required ] ],\n    password: [ '', [ Validators.required ] ]\n  });\n\n  /**\n   * Toggles the visibility of the password input.\n   * @param {MouseEvent} event - The mouse event triggered by clicking the visibility button.\n   */\n  clickEvent(event: MouseEvent) {\n    this.hide.set(!this.hide());\n    event.stopPropagation();\n  }\n\n  /**\n   * Logs in the user with the provided credentials.\n   */\n  login() {\n    if(this.form.invalid) {\n      this.errorMessage.set('Please enter your username and password')\n      return;\n    } else {\n      const payload = this.form.value as AuthPayload;\n      this.authState.login(payload)\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome to Flight Tracker            Sign in      Enter credentials to continue                                Enter your username                                    Enter your password                                {{ hide() ? \\'visibility_off\\' : \\'visibility\\' }}                          Sign in              @if (errorMessage()) {      {{ errorMessage() }}    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ticket.html":{"url":"interfaces/Ticket.html","title":"interface - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ticket.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            inbound\n                                        \n                                \n                                \n                                        \n                                            outbound\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            seat_number\n                                        \n                                \n                                \n                                        \n                                            ticket_type\n                                        \n                                \n                                \n                                        \n                                            ticket_type_id\n                                        \n                                \n                                \n                                        \n                                            to_date\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inbound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inbound:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outbound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outbound:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seat_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seat_number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ticket_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_type_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ticket_type_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Ticket {\n  id?: number;\n  inbound: string;\n  outbound: string;\n  ticket_type: string;\n  ticket_type_id: string;\n  price: number;\n  from_date: string;\n  to_date: string;\n  seat_number: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TicketCardComponent.html":{"url":"components/TicketCardComponent.html","title":"component - TicketCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TicketCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tickets/components/ticket-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ticket-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            DatePipe\n                            MatCardFooter\n                            MatCardSubtitle\n                            MatCardTitle\n                \n            \n\n\n            \n                styles\n                \n      .flight-ticket-card {\n        margin: 16px;\n        padding: 16px;\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n\n      mat-card-header {\n        background-color: #d7e3ff;\n        color: #005cbb;\n        padding: 16px;\n        border-bottom: 1px solid #e0e0e0;\n      }\n\n      mat-card-title {\n        font-weight: bold;\n        font-size: 1.5em;\n      }\n\n      mat-card-subtitle {\n        font-size: 1.2em;\n        color: #757575;\n      }\n\n      mat-card-content p {\n        margin: 8px 0;\n      }\n\n      mat-card-footer {\n        padding: 16px;\n        color: #005cbb;\n        background-color: #d7e3ff;\n        border-top: 1px solid #e0e0e0;\n        text-align: right;\n      }\n    \n            \n\n            \n                template\n                \n  \n    {{ ticket().inbound }} to {{ ticket().outbound }}\n    {{ ticket().ticket_type }} - Seat: {{ ticket().seat_number }}\n  \n  \n    Departure: {{ ticket().from_date }}\n    Return: {{ ticket().to_date }}\n    Price: $ {{ ticket().price }}\n  \n  \n    Ticket ID: {{ ticket().ticket_type_id }}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ticket\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ticket\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ticket\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tickets/components/ticket-card.component.ts:88\n                            \n                        \n                \n                    \n                        The ticket data to display.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ticket\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-card.component.ts:88\n                        \n                    \n\n            \n                \n                    The ticket data to display.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, OnInit } from '@angular/core';\nimport {\n  MatCard,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardSubtitle,\n  MatCardTitle\n} from '@angular/material/card';\nimport { DatePipe } from '@angular/common';\nimport { Ticket } from '../../../models/ticket.interface';\n\n@Component({\n  selector: 'app-ticket-card',\n  template: `\n    \n      \n        {{ ticket().inbound }} to {{ ticket().outbound }}\n        {{ ticket().ticket_type }} - Seat: {{ ticket().seat_number }}\n      \n      \n        Departure: {{ ticket().from_date }}\n        Return: {{ ticket().to_date }}\n        Price: $ {{ ticket().price }}\n      \n      \n        Ticket ID: {{ ticket().ticket_type_id }}\n      \n    \n  `,\n  standalone: true,\n  imports: [\n    MatCard,\n    MatCardHeader,\n    MatCardContent,\n    DatePipe,\n    MatCardFooter,\n    MatCardSubtitle,\n    MatCardTitle\n  ],\n  styles: [\n    `\n      .flight-ticket-card {\n        margin: 16px;\n        padding: 16px;\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n\n      mat-card-header {\n        background-color: #d7e3ff;\n        color: #005cbb;\n        padding: 16px;\n        border-bottom: 1px solid #e0e0e0;\n      }\n\n      mat-card-title {\n        font-weight: bold;\n        font-size: 1.5em;\n      }\n\n      mat-card-subtitle {\n        font-size: 1.2em;\n        color: #757575;\n      }\n\n      mat-card-content p {\n        margin: 8px 0;\n      }\n\n      mat-card-footer {\n        padding: 16px;\n        color: #005cbb;\n        background-color: #d7e3ff;\n        border-top: 1px solid #e0e0e0;\n        text-align: right;\n      }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TicketCardComponent {\n  /**\n   * The ticket data to display.\n   */\n  ticket = input.required()\n}\n\n    \n\n\n    \n            \n      .flight-ticket-card {\n        margin: 16px;\n        padding: 16px;\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n\n      mat-card-header {\n        background-color: #d7e3ff;\n        color: #005cbb;\n        padding: 16px;\n        border-bottom: 1px solid #e0e0e0;\n      }\n\n      mat-card-title {\n        font-weight: bold;\n        font-size: 1.5em;\n      }\n\n      mat-card-subtitle {\n        font-size: 1.2em;\n        color: #757575;\n      }\n\n      mat-card-content p {\n        margin: 8px 0;\n      }\n\n      mat-card-footer {\n        padding: 16px;\n        color: #005cbb;\n        background-color: #d7e3ff;\n        border-top: 1px solid #e0e0e0;\n        text-align: right;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ ticket().inbound }} to {{ ticket().outbound }}    {{ ticket().ticket_type }} - Seat: {{ ticket().seat_number }}        Departure: {{ ticket().from_date }}    Return: {{ ticket().to_date }}    Price: $ {{ ticket().price }}        Ticket ID: {{ ticket().ticket_type_id }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'TicketCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TicketDealsComponent.html":{"url":"components/TicketDealsComponent.html","title":"component - TicketDealsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TicketDealsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/components/ticket-deals.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ticket-deals\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardContent\n                            MatCardHeader\n                            MatCardTitle\n                                TicketCardComponent\n                \n            \n\n\n\n            \n                template\n                \n  \n    Deals\n  \n  \n    \n      @for (ticket of data(); track ticket.id) {\n        \n      } @empty {\n        No tickets found\n      }\n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                load\n                            \n                            \n                                loading\n                            \n                            \n                                tickets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/components/ticket-deals.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/ticket-deals.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/ticket-deals.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(pipe(\n      switchMap(() => {\n          this.loading.set(true);\n          console.log('here');\n          return this.tickets.getTicketDeals().pipe(\n            tap((data) => {\n              this.loading.set(false);\n              this.error.set(null);\n              this.data.set(data);\n            }),\n            catchError((error) => {\n              this.loading.set(false);\n              this.error.set('Something went wrong. Please try again.');\n              return of({});\n            })\n          )\n        }\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/ticket-deals.component.ts:52\n                        \n                    \n\n            \n                \n                    Loads the ticket deals.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/ticket-deals.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tickets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TicketsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/components/ticket-deals.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardContent, MatCardHeader, MatCardTitle } from '@angular/material/card';\nimport { TicketCardComponent } from '../../tickets/components/ticket-card.component';\nimport { Ticket } from '../../../models/ticket.interface';\nimport { createEffect } from 'ngxtension/create-effect';\nimport { catchError, of, pipe, switchMap, tap } from 'rxjs';\nimport { ChartData } from 'chart.js';\nimport { TicketsService } from '../../../services/tickets.service';\n\n@Component({\n  selector: 'app-ticket-deals',\n  template: `\n    \n      \n        Deals\n      \n      \n        \n          @for (ticket of data(); track ticket.id) {\n            \n          } @empty {\n            No tickets found\n          }\n        \n      \n    \n  `,\n  imports: [\n    MatCard,\n    MatCardContent,\n    MatCardHeader,\n    MatCardTitle,\n    TicketCardComponent\n  ],\n  standalone: true\n})\n\nexport class TicketDealsComponent implements OnInit {\n\n  data = signal([]);\n  loading = signal(false);\n  error = signal(null);\n  tickets = inject(TicketsService);\n\n  ngOnInit() {\n    this.load();\n  }\n\n  /**\n   * Loads the ticket deals.\n   */\n  load = createEffect(pipe(\n      switchMap(() => {\n          this.loading.set(true);\n          console.log('here');\n          return this.tickets.getTicketDeals().pipe(\n            tap((data) => {\n              this.loading.set(false);\n              this.error.set(null);\n              this.data.set(data);\n            }),\n            catchError((error) => {\n              this.loading.set(false);\n              this.error.set('Something went wrong. Please try again.');\n              return of({});\n            })\n          )\n        }\n      ),\n    ),\n  )\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Deals              @for (ticket of data(); track ticket.id) {              } @empty {        No tickets found      }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'TicketDealsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TicketFiltersComponent.html":{"url":"components/TicketFiltersComponent.html","title":"component - TicketFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TicketFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tickets/components/ticket-filters.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ticket-filters\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormField\n                            MatDateRangeInput\n                            MatDatepickerToggle\n                            MatDateRangePicker\n                            MatDatepicker\n                            MatSuffix\n                            MatStartDate\n                            MatEndDate\n                            ReactiveFormsModule\n                            MatLabel\n                            MatHint\n                            MatError\n                            MatInput\n                            JsonPipe\n                            MatButton\n                \n            \n\n\n\n            \n                template\n                \n  \n\n    \n      Enter a date range\n      \n        \n        \n      \n      \n      \n\n      @if (form.controls.from_date.hasError('matStartDateInvalid')) {\n        Invalid start date\n      }\n      @if (form.controls.to_date.hasError('matEndDateInvalid')) {\n        Invalid end date\n      }\n    \n\n    \n      From price\n      \n    \n\n    \n      To price\n      \n    \n\n    \n      Inbound\n      \n    \n\n    \n      Outbound\n      \n    \n  \n  \n    Clear\n    Search\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                params\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onReset\n                            \n                            \n                                onSearch\n                            \n                            \n                                parseDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tickets/components/ticket-filters.component.ts:100\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/components/ticket-filters.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Resets the form and emits the search event with the reset values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/components/ticket-filters.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Emits the search event with the current form values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseDate\n                        \n                    \n                \n            \n            \n                \nparseDate(dateString: string | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/components/ticket-filters.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Parses a date string into a Date object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateString\n                                            \n                                                        string | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe date string to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The parsed Date object or null if the input is invalid.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-filters.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    from_date: '',\n    to_date: '',\n    from_price: '',\n    to_price: '',\n    inbound: '',\n    outbound: ''\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-filters.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required>()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-filters.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output>()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-filters.component.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, effect, inject, input, OnInit, output} from '@angular/core';\nimport {MatError, MatFormField, MatHint, MatLabel, MatSuffix} from \"@angular/material/form-field\";\nimport {\n  MatDatepicker,\n  MatDatepickerToggle,\n  MatDateRangeInput,\n  MatDateRangePicker, MatEndDate,\n  MatStartDate\n} from \"@angular/material/datepicker\";\nimport {FormBuilder, ReactiveFormsModule} from \"@angular/forms\";\nimport {DateAdapter} from \"@angular/material/core\";\nimport {MatInput} from \"@angular/material/input\";\nimport {JsonPipe} from \"@angular/common\";\nimport {MatButton} from \"@angular/material/button\";\nimport {TicketListParams} from \"../../../models/ticket-state.interface\";\n\n@Component({\n  selector: 'app-ticket-filters',\n  template: `\n    \n      \n\n        \n          Enter a date range\n          \n            \n            \n          \n          \n          \n\n          @if (form.controls.from_date.hasError('matStartDateInvalid')) {\n            Invalid start date\n          }\n          @if (form.controls.to_date.hasError('matEndDateInvalid')) {\n            Invalid end date\n          }\n        \n\n        \n          From price\n          \n        \n\n        \n          To price\n          \n        \n\n        \n          Inbound\n          \n        \n\n        \n          Outbound\n          \n        \n      \n      \n        Clear\n        Search\n      \n    \n  `,\n  standalone: true,\n  imports: [\n    MatFormField,\n    MatDateRangeInput,\n    MatDatepickerToggle,\n    MatDateRangePicker,\n    MatDatepicker,\n    MatSuffix,\n    MatStartDate,\n    MatEndDate,\n    ReactiveFormsModule,\n    MatLabel,\n    MatHint,\n    MatError,\n    MatInput,\n    JsonPipe,\n    MatButton\n  ],\n  providers: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TicketFiltersComponent {\n  fb = inject(FormBuilder);\n  params = input.required>()\n  search = output>()\n\n  form = this.fb.group({\n    from_date: '',\n    to_date: '',\n    from_price: '',\n    to_price: '',\n    inbound: '',\n    outbound: ''\n  })\n\n  constructor() {\n    effect(() => {\n      this.form.patchValue({\n        ...this.params(),\n        from_date: this.parseDate(this.params().from_date),\n        to_date: this.parseDate(this.params().to_date)\n      } as any, {emitEvent: false})\n    });\n  }\n\n  /**\n   * Parses a date string into a Date object.\n   * @param {string | null | undefined} dateString - The date string to parse.\n   * @returns {Date | null} The parsed Date object or null if the input is invalid.\n   */\n  parseDate(dateString: string | null | undefined): Date | null {\n    if(!dateString) return null;\n    return new Date(dateString)\n  }\n\n  /**\n   * Emits the search event with the current form values.\n   */\n  onSearch() {\n    this.search.emit(this.form.value as Partial);\n  }\n\n  /**\n   * Resets the form and emits the search event with the reset values.\n   */\n  onReset() {\n    this.form.reset();\n    this.search.emit(this.form.value as Partial);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Enter a date range                                              @if (form.controls.from_date.hasError(\\'matStartDateInvalid\\')) {        Invalid start date      }      @if (form.controls.to_date.hasError(\\'matEndDateInvalid\\')) {        Invalid end date      }              From price                    To price                    Inbound                    Outbound                  Clear    Search  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'TicketFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TicketListComponent.html":{"url":"components/TicketListComponent.html","title":"component - TicketListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TicketListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tickets/components/ticket-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ticket-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TicketCardComponent\n                            MatPaginator\n                \n            \n\n\n            \n                styles\n                \n\n  \n            \n\n            \n                template\n                \n  @for (ticket of data(); track ticket.id) {\n    \n  } @empty {\n    No tickets found\n  }\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                page\n                            \n                            \n                                pageChange\n                            \n                            \n                                pageSize\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        page\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tickets/components/ticket-list.component.ts:50\n                            \n                        \n                \n                    \n                        The current page index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tickets/components/ticket-list.component.ts:45\n                            \n                        \n                \n                    \n                        The current page size.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        total\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tickets/components/ticket-list.component.ts:55\n                            \n                        \n                \n                    \n                        The total number of tickets.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tickets/components/ticket-list.component.ts:60\n                            \n                        \n                \n                    \n                        The total number of tickets.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-list.component.ts:39\n                        \n                    \n\n            \n                \n                    The list of tickets to display.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-list.component.ts:50\n                        \n                    \n\n            \n                \n                    The current page index.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageChange\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-list.component.ts:60\n                        \n                    \n\n            \n                \n                    The total number of tickets.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-list.component.ts:45\n                        \n                    \n\n            \n                \n                    The current page size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pages/tickets/components/ticket-list.component.ts:55\n                        \n                    \n\n            \n                \n                    The total number of tickets.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, OnInit, output } from '@angular/core';\nimport { Ticket } from '../../../models/ticket.interface';\nimport { TicketCardComponent } from './ticket-card.component';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-ticket-list',\n  template: `\n    \n      @for (ticket of data(); track ticket.id) {\n        \n      } @empty {\n        No tickets found\n      }\n    \n    \n    \n  `,\n  standalone: true,\n  styles: `\n\n  `,\n  imports: [\n    TicketCardComponent,\n    MatPaginator\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TicketListComponent {\n  /**\n   * The list of tickets to display.\n   */\n  data = input.required();\n\n\n  /**\n   * The current page size.\n   */\n  pageSize = input.required();\n\n  /**\n   * The current page index.\n   */\n  page = input.required();\n\n  /**\n   * The total number of tickets.\n   */\n  total = input.required();\n\n  /**\n   * The total number of tickets.\n   */\n  pageChange = output()\n}\n\n    \n\n\n    \n            \n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (ticket of data(); track ticket.id) {      } @empty {    No tickets found  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'TicketListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketListParams.html":{"url":"interfaces/TicketListParams.html","title":"interface - TicketListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ticket-state.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from_date\n                                        \n                                \n                                \n                                        \n                                            from_price\n                                        \n                                \n                                \n                                        \n                                            inbound\n                                        \n                                \n                                \n                                        \n                                            outbound\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            to_date\n                                        \n                                \n                                \n                                        \n                                            to_price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from_date:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from_price:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inbound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inbound:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outbound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outbound:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to_date:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to_price:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ticket } from './ticket.interface';\n\nexport interface TicketListParams {\n  page: number;\n  pageSize: number;\n  from_date: string | null;\n  to_date: string | null;\n  inbound: string | null;\n  outbound: string | null;\n  from_price: number | null;\n  to_price: number | null;\n}\n\nexport interface TicketListState {\n  data: Ticket[];\n  params: TicketListParams;\n  total: number;\n  loading: boolean;\n  loaded: boolean;\n  error: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketListState.html":{"url":"interfaces/TicketListState.html","title":"interface - TicketListState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketListState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ticket-state.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Ticket[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ticket[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         TicketListParams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketListParams\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ticket } from './ticket.interface';\n\nexport interface TicketListParams {\n  page: number;\n  pageSize: number;\n  from_date: string | null;\n  to_date: string | null;\n  inbound: string | null;\n  outbound: string | null;\n  from_price: number | null;\n  to_price: number | null;\n}\n\nexport interface TicketListState {\n  data: Ticket[];\n  params: TicketListParams;\n  total: number;\n  loading: boolean;\n  loaded: boolean;\n  error: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TicketsComponent.html":{"url":"components/TicketsComponent.html","title":"component - TicketsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TicketsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tickets/tickets.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                TicketListStore\n                \n            \n\n\n            \n                selector\n                app-tickets\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            RouterLink\n                                RoleDirective\n                            MatCard\n                                TicketFiltersComponent\n                            MatCardContent\n                                TicketListComponent\n                            JsonPipe\n                            MatProgressBar\n                \n            \n\n\n\n            \n                template\n                \n  @if (store.loading()) {\n    \n  }\n\n\n\n  Tickets\n  Create Ticket\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryParams\n                            \n                            \n                                Role\n                            \n                            \n                                router\n                            \n                            \n                                snackBar\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onPagination\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tickets/tickets.component.ts:75\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/tickets.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPagination\n                        \n                    \n                \n            \n            \n                \nonPagination(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/tickets.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles pagination events.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pagination event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch(event: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tickets/tickets.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Handles search events.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search event parameters.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        queryParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectQueryParams()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/tickets.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Role\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/tickets.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/tickets.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBar)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/tickets.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TicketListStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tickets/tickets.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, inject, OnInit } from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {Router, RouterLink} from '@angular/router';\nimport {RoleDirective} from '../../auth/role.directive';\nimport {Role} from '../../enums/role.enum';\nimport {MatCard, MatCardContent} from '@angular/material/card';\nimport {TicketFiltersComponent} from './components/ticket-filters.component';\nimport {TicketListComponent} from './components/ticket-list.component';\nimport {TicketListStore} from './tickets.store';\nimport {JsonPipe} from '@angular/common';\nimport {PageEvent} from '@angular/material/paginator';\nimport {injectQueryParams} from 'ngxtension/inject-query-params';\nimport {TicketListParams} from \"../../models/ticket-state.interface\";\nimport {MatProgressBar} from \"@angular/material/progress-bar\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {explicitEffect} from \"ngxtension/explicit-effect\";\n\n@Component({\n  selector: 'app-tickets',\n  template: `\n    \n      @if (store.loading()) {\n        \n      }\n    \n\n    \n      Tickets\n      Create Ticket\n    \n\n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n  `,\n  standalone: true,\n  imports: [\n    MatButton,\n    RouterLink,\n    RoleDirective,\n    MatCard,\n    TicketFiltersComponent,\n    MatCardContent,\n    TicketListComponent,\n    JsonPipe,\n    MatProgressBar\n  ],\n  providers: [\n    TicketListStore\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TicketsComponent implements OnInit {\n  Role = Role;\n\n  queryParams = injectQueryParams();\n  router = inject(Router);\n  store = inject(TicketListStore);\n  snackBar = inject(MatSnackBar);\n\n  constructor() {\n    explicitEffect([this.store.state], ([state]) => {\n      if (state.error) {\n        this.snackBar.open(state.error, 'Close', {\n          duration: 5000\n        });\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.store.load({\n      page: this.queryParams()['_page'] ? Number(this.queryParams()['_page']) : 0,\n      pageSize: this.queryParams()['_limit'] ? Number(this.queryParams()['_limit']) : 10,\n      from_date: this.queryParams()['from_date'],\n      to_date: this.queryParams()['to_date'],\n      inbound: this.queryParams()['inbound'],\n      outbound: this.queryParams()['outbound'],\n      from_price: this.queryParams()['from_price'],\n      to_price: this.queryParams()['to_price'],\n    })\n  }\n\n  /**\n   * Handles pagination events.\n   * @param {PageEvent} event - The pagination event.\n   */\n  onPagination(event: PageEvent) {\n    this.router.navigate([], {\n      queryParams: {\n        _page: event.pageIndex + 1,\n        _limit: event.pageSize\n      },\n      queryParamsHandling: 'merge'\n    });\n    this.store.load({page: event.pageIndex, pageSize: event.pageSize});\n  }\n\n  /**\n   * Handles search events.\n   * @param {Partial} event - The search event parameters.\n   */\n  onSearch(event: Partial) {\n    this.router.navigate([], {\n      queryParams: {\n        from_date: event.from_date,\n        to_date: event.to_date,\n        inbound: event.inbound,\n        outbound: event.outbound,\n        from_price: event.from_price,\n        to_price: event.to_price,\n      },\n      queryParamsHandling: 'merge'\n    });\n    this.store.load(event);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (store.loading()) {      }  Tickets  Create Ticket                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'TicketsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketsService.html":{"url":"injectables/TicketsService.html","title":"injectable - TicketsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tickets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTicket\n                            \n                            \n                                    Private\n                                getParams\n                            \n                            \n                                getTicketDeals\n                            \n                            \n                                getTickets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTicket\n                        \n                    \n                \n            \n            \n                \ncreateTicket(ticket: Ticket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tickets.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Creates a new ticket.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ticket\n                                            \n                                                            Ticket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ticket to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable containing the created ticket.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParams(params: TicketListParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tickets.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Converts TicketListParams into HttpParams.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            TicketListParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe parameters to convert.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpParams\n\n                        \n                            \n                                The converted HttpParams object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTicketDeals\n                        \n                    \n                \n            \n            \n                \ngetTicketDeals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tickets.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Fetches ticket deals.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable containing the list of ticket deals.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTickets\n                        \n                    \n                \n            \n            \n                \ngetTickets(params: TicketListParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tickets.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Fetches tickets based on the provided parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            TicketListParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe parameters for fetching tickets.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                An observable containing the list of tickets.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tickets.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { TicketListParams } from '../models/ticket-state.interface';\nimport { Ticket } from '../models/ticket.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class TicketsService {\n  http = inject(HttpClient);\n\n  /**\n   * Fetches tickets based on the provided parameters.\n   * @param {TicketListParams} params - The parameters for fetching tickets.\n   * @returns {Observable>} An observable containing the list of tickets.\n   */\n  getTickets(params: TicketListParams): Observable> {\n    const path = `${environment.apiUrl}/tickets`;\n    return this.http.get(path, { observe: 'response', params: this.getParams(params) });\n  }\n\n  /**\n   * Converts TicketListParams into HttpParams.\n   * @param {TicketListParams} params - The parameters to convert.\n   * @returns {HttpParams} The converted HttpParams object.\n   */\n  private getParams(params: TicketListParams): HttpParams {\n    let httpParams = new HttpParams()\n      .set('_page', params.page.toString())\n      .set('_limit', params.pageSize.toString());\n\n    if (params.from_date) {\n      httpParams = httpParams.set('from_date_gte', new Date(params.from_date).toLocaleDateString());\n    }\n    if (params.to_date) {\n      httpParams = httpParams.set('to_date_lte', new Date(params.to_date).toLocaleDateString());\n    }\n    if (params.inbound) {\n      httpParams = httpParams.set('inbound_like', params.inbound);\n    }\n    if (params.outbound) {\n      httpParams = httpParams.set('outbound_like', params.outbound);\n    }\n    if (params.from_price !== null && params.from_price !== undefined) {\n      httpParams = httpParams.set('price_gte', params.from_price.toString());\n    }\n    if (params.to_price !== null && params.to_price !== undefined) {\n      httpParams = httpParams.set('price_lte', params.to_price.toString());\n    }\n\n    return httpParams;\n  }\n\n  /**\n   * Fetches ticket deals.\n   * @returns {Observable} An observable containing the list of ticket deals.\n   */\n  getTicketDeals(): Observable {\n    const path = `${environment.apiUrl}/tickets`;\n    return this.http.get(path, {\n      params: new HttpParams({\n        fromObject: {\n          _limit: '6',\n          _sort: 'price',\n          _order: 'asc'\n        }\n      })\n    });\n  }\n\n  /**\n   * Creates a new ticket.\n   * @param {Ticket} ticket - The ticket to create.\n   * @returns {Observable} An observable containing the created ticket.\n   */\n  createTicket(ticket: Ticket): Observable {\n    const path = `${environment.apiUrl}/tickets`;\n    return this.http.post(path, ticket);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDecoded.html":{"url":"interfaces/TokenDecoded.html","title":"interface - TokenDecoded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDecoded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/token-decoded.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDecoded {\n  id: string;\n  username: string;\n  iat: number;\n  exp: number;\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/toolbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatIcon\n                            MatToolbar\n                            MatIconButton\n                            MatMenuTrigger\n                            MatButton\n                            MatMenu\n                            RouterLink\n                            MatMenuItem\n                \n            \n\n\n\n            \n                template\n                \n  \n    \n      menu\n    \n    Flight Tracker\n  \n  \n    \n      account_circle\n    \n  \n\n\n  \n    {{authState.tokenDecoded()?.username}}\n    {{authState.tokenDecoded()?.role}}\n  \n  \n    \n    Logout\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authState\n                            \n                            \n                                layout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layout/toolbar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/toolbar.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        layout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LayoutService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/toolbar.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { LayoutService } from './layout.service';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatMenu, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { RouterLink } from '@angular/router';\nimport { AuthStore } from '../auth/auth.store';\n\n@Component({\n  selector: 'app-toolbar',\n  template: `\n    \n      \n        \n          menu\n        \n        Flight Tracker\n      \n      \n        \n          account_circle\n        \n      \n    \n    \n      \n        {{authState.tokenDecoded()?.username}}\n        {{authState.tokenDecoded()?.role}}\n      \n      \n        \n        Logout\n    \n  `,\n  standalone: true,\n  imports: [\n    MatIcon,\n    MatToolbar,\n    MatIconButton,\n    MatMenuTrigger,\n    MatButton,\n    MatMenu,\n    RouterLink,\n    MatMenuItem\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ToolbarComponent {\n  layout = inject(LayoutService);\n  authState = inject(AuthStore);\n\n  logout() {\n    this.authState.logout();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        Flight Tracker              account_circle            {{authState.tokenDecoded()?.username}}    {{authState.tokenDecoded()?.role}}            Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTicketComponent', 'selector': 'app-create-ticket'},{'name': 'DashboardChart', 'selector': 'app-dashboard-chart'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardLayoutComponent', 'selector': 'app-dashboard-layout'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'TicketCardComponent', 'selector': 'app-ticket-card'},{'name': 'TicketDealsComponent', 'selector': 'app-ticket-deals'},{'name': 'TicketFiltersComponent', 'selector': 'app-ticket-filters'},{'name': 'TicketListComponent', 'selector': 'app-ticket-list'},{'name': 'TicketsComponent', 'selector': 'app-tickets'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [{'name': 'RoleDirective', 'selector': '[role]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            initializeApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            function\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            function\n            handleRequestError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.store.ts\n            \n            injectable\n            AuthStore\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/auth/non-auth.guard.ts\n            \n            function\n            nonAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/role.directive.ts\n            \n            directive\n            RoleDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layout/dashboard-layout.component.ts\n            \n            component\n            DashboardLayoutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout.service.ts\n            \n            injectable\n            LayoutService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/layout/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/auth-payload.interface.ts\n            \n            interface\n            AuthPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/ticket-state.interface.ts\n            \n            interface\n            TicketListParams\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/ticket-state.interface.ts\n            \n            interface\n            TicketListState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/ticket.interface.ts\n            \n            interface\n            Ticket\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/token-decoded.interface.ts\n            \n            interface\n            TokenDecoded\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard/components/dashboard-chart.component.ts\n            \n            component\n            DashboardChart\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard/components/ticket-deals.component.ts\n            \n            component\n            TicketDealsComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/components/ticket-card.component.ts\n            \n            component\n            TicketCardComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/components/ticket-filters.component.ts\n            \n            component\n            TicketFiltersComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/components/ticket-list.component.ts\n            \n            component\n            TicketListComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/create-ticket.component.ts\n            \n            component\n            CreateTicketComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/tickets.component.ts\n            \n            component\n            TicketsComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/tickets.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/tickets/tickets.store.ts\n            \n            variable\n            TicketListStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/dashboard.service.ts\n            \n            injectable\n            DashboardService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/tickets.service.ts\n            \n            injectable\n            TicketsService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/utils/validators/date-range-validator.ts\n            \n            function\n            dateRangeValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.1.0\n        \n            @angular/cdk : ^18.1.1\n        \n            @angular/common : ^18.1.0\n        \n            @angular/compiler : ^18.1.0\n        \n            @angular/core : ^18.1.0\n        \n            @angular/forms : ^18.1.0\n        \n            @angular/material : ^18.1.1\n        \n            @angular/platform-browser : ^18.1.0\n        \n            @angular/platform-browser-dynamic : ^18.1.0\n        \n            @angular/router : ^18.1.0\n        \n            @ngrx/signals : ^18.0.0\n        \n            chart.js : ^4.4.3\n        \n            install : ^0.13.0\n        \n            jwt-decode : ^4.0.0\n        \n            ng2-charts : ^6.0.1\n        \n            ngxtension : ^4.0.0\n        \n            npm : ^10.8.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            uuid : ^10.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DashboardChartTypeEnum   (src/.../dashboard-chart-type.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/dashboard-chart-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DashboardChartTypeEnum\n                    \n                \n                        \n                            \n                                 AVERAGE_PRICE\n                            \n                        \n                        \n                            \n                                Value : AVERAGE_PRICE\n                            \n                        \n                        \n                            \n                                 TICKET_SALES\n                            \n                        \n                        \n                            \n                                Value : TICKET_SALES\n                            \n                        \n            \n        \n\n    src/app/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            dateRangeValidator   (src/.../date-range-validator.ts)\n                        \n                        \n                            handleRequestError   (src/.../auth.interceptor.ts)\n                        \n                        \n                            initializeApp   (src/.../app.config.ts)\n                        \n                        \n                            nonAuthGuard   (src/.../non-auth.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n            \n                \nauthGuard(role)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                role\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CanMatchFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/utils/validators/date-range-validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dateRangeValidator\n                        \n                    \n                \n            \n            \n                \ndateRangeValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleRequestError\n                        \n                    \n                \n            \n            \n                \nhandleRequestError(err: HttpErrorResponse, authStore: AuthStore)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authStore\n                                            \n                                                            AuthStore\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp(auth: AuthStore)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                            AuthStore\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/auth/non-auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nonAuthGuard\n                        \n                    \n                \n            \n            \n                \nnonAuthGuard()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     CanMatchFn\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFlight Tracker\nOverview\nFlight Tracker is an Angular application for managing and tracking flight tickets. The application supports two roles: Admin and User. Users can view and filter tickets, while Admins have additional privileges, including the ability to create multiple tickets simultaneously without redirection.\nFeatures\n\nLogin Page: Users can log in with roles Admin and User.\nUser Role:\nView all tickets.\nFilter tickets.\nView dashboard\n\n\nAdmin Role:\nSame privileges as User.\nCreate multiple tickets in the same form without redirection.\n\n\nTicket Fields:\nid\ninbound\noutbound\nticket_type\nticket_type_id (combination of the id and ticket_type)\nprice\nfrom_date\nto_date or date_range\nseat_number\n\n\nValidation:\nNo duplicate tickets for the same inbound, outbound, from, to, and seat_number values.\nPrice should be a positive number.\nFrom date should be before the to date.\n\n\nDashboard:\nAverage Price By Ticket Type: Average price of tickets by ticket type.\nTicket Sales Over Time: Number of tickets sold over time.\nDeals: Special deals for users.\n\n\nChart: Visualization based on ticket data.\n\nOthers\n\nWindow Communication: Actions on one window reflect on another window on auth part.\n\nPrerequisites\n\nNode.js (v20 or above)\nnpm (v10 or above)\nAngular CLI (v18.1.1)\njson-server (v0.17.0)\n\nSetup\n\nClone the repository:\n\nExample :git clone https://github.com/your-repo/flight-tracker.git\ncd flight-tracker\nInstall dependencies:\n\nExample :npm install\ncd json-server && npm installRunning the Application\nAngular Development Server\n\nStart Angular development server:\n\nExample :npm start\nOpen your browser and navigate to http://localhost:4200.\n\nJSON Server\nExample :cd json-server && npm run dev\nRun migrations optionally:\n\nExample :cd json-server && npm run migrateThe JSON Server will be running on http://localhost:3000.\nUML Diagram\nFlight Tracker UML Diagram\n\nDocumentation\nGenerate documentation using Compodoc:\n\nGenerate documentation:\n\nExample :npm run compodoc\nServe the documentation:\n\nExample :npx compodoc -s\nOpen your browser and navigate to http://localhost:8080 to view the documentation.\n\nFunctionalities\n\nLogin Page: Authenticate as Admin or User.\n\nView and Filter Tickets: Users and Admins can view and filter tickets.\n\nCreate Tickets: Admins can create multiple tickets without redirection.\n\nValidation: Ensure no duplicate tickets are created.\nCharts: Visualize data such as revenue by ticket type, ticket sales over time, and average ticket price by ticket type.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initialState   (src/.../tickets.store.ts)\n                        \n                        \n                            TicketListStore   (src/.../tickets.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      multi: true,\n      deps: [AuthStore],\n    },\n    provideExperimentalZonelessChangeDetection(),\n    provideRouter(routes),\n    provideAnimationsAsync(),\n    provideHttpClient(withInterceptors([authInterceptor])),\n    provideNativeDateAdapter(),\n    MatSnackBar,\n    provideCharts(withDefaultRegisterables()),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  const authStore = inject(AuthStore);\n  const token = authStore.token();\n\n  const clonedRequest = token\n    ? request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    : request;\n\n  return next(clonedRequest).pipe(\n    catchError(err => handleRequestError(err, authStore))\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'http://localhost:3000',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/tickets/tickets.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketListState\n\n                    \n                \n                \n                    \n                        Default value : {\n  data: [],\n  params: {\n    page: 0,\n    pageSize: 10,\n    from_date: null,\n    to_date: null,\n    inbound: null,\n    outbound: null,\n    from_price: null,\n    to_price: null,\n  },\n  total: 0,\n  loaded: false,\n  loading: false,\n  error: null,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TicketListStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  withState(initialState),\n  withMethods((store, ticketsService = inject(TicketsService)) => ({\n    /**\n     * Gets the current state of the store.\n     * @returns {TicketListState} The current state.\n     */\n    state: (): TicketListState => {\n      return getState(store);\n    },\n    /**\n     * Loads the tickets based on the provided parameters.\n     * @param {Partial} params - The parameters for loading tickets.\n     * @returns {void}\n     */\n    load: rxMethod>(\n      pipe(\n        tap(() => patchState(store, {loading: true})),\n        switchMap((params: Partial) => {\n          const newParams = {...getState(store).params, ...params};\n          return ticketsService.getTickets(newParams).pipe(\n            tap({\n              next: response => {\n                patchState(store, {\n                  data: response.body ?? [],\n                  total: Number(response.headers.get('X-Total-Count')),\n                  loaded: true,\n                  loading: false,\n                  error: null,\n                  params: newParams,\n                });\n              },\n            }),\n            catchError((e) => {\n              console.log(e)\n              patchState(store, {\n                error: 'Error loading tickets',\n                loaded: false,\n                loading: false,\n              });\n              return EMPTY;\n            })\n          );\n        }),\n\n      )\n    )\n  }))\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
